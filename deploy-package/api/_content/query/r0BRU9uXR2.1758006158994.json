{"_path":"/courses/01-beginner-to-advance-nodejs","_dir":"courses","_draft":false,"_partial":false,"_locale":"","title":"NodeJS Deep Dive","description":"Node.js is a powerful JavaScript runtime that enables fast, scalable, and event-driven server-side development. This course offers an in-depth exploration of Node.js internals - covering its architecture, core concepts, and essential components such as the JavaScript engine and libuv. You'll gain a solid understanding of the Node.js ecosystem, including how its asynchronous model and event loop function under the hood. With a strong focus on hands-on learning, the course guides you through building real-world backend applications from scratch using Express.js and MongoDB.","time":"1hr 30 mins","tutor":1,"video":false,"topics":["nodejs","javascript"],"content":[{"module_id":1,"module_name":"Getting Started with Node.js","module_duration":"25 mins read","topics_count":4,"tutor":1,"expanded":false,"topics":[{"id":1,"topic_name":"Introduction to NodeJS","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-05","description":"Node.js is a high-performance JavaScript runtime designed for building fast, scalable server-side applications. With its event-driven, non-blocking architecture, it efficiently handles multiple requests, making it ideal for real-time applications like chat apps and streaming services. By the end, you’ll have a strong foundation in Node.js, enabling you to build scalable, high-performance applications from scratch.\n","topics":["nodejs","javascript"],"duration":"3:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930701/Portfolio/nodeJsCourse/1_dekvuz.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-1"},{"id":2,"topic_name":"JavaScript on Server","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-06","description":"Discover how JavaScript powers server-side development with Node.js, transforming the way web applications are built. Node.js is a fast, scalable runtime that enables asynchronous, event-driven programming, making it ideal for real-time applications like chat apps and streaming services. You'll also learn to build server-side applications from scratch, manage dependencies with npm, and use frameworks like Express.js.\n","topics":["nodejs","javascript"],"duration":"5:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930701/Portfolio/nodeJsCourse/2_zzsbpy.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-2"},{"id":3,"topic_name":"Let's write code","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-07","description":"Go to Node.js website and download the latest version, If you are struggling in installing feel free to contact me , we can schedule a 5min meeting I will help you to download Node.js in to your system , Best way to download it , Go to Prebuilt installer and download a file and install it by executing by dowload file.\n","topics":["nodejs","javascript"],"duration":"5:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930702/Portfolio/nodeJsCourse/3_xveryy.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-3"},{"id":4,"topic_name":"Module.export & require","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-08","description":"As you saw in the last episode, we wrote our first line of code in Node.js. Now, we could just keep adding whatever we want to app.js, and technically, it would work. But that's not the best way to do things because the file would get cluttered and hard to manage. Instead, we need multiple files.So, you'll use require to include different modules into your main file.\n","topics":["nodejs","javascript"],"duration":"5:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930702/Portfolio/nodeJsCourse/4.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-4"}]},{"module_id":2,"module_name":"Node.js Internals & Core Concepts","module_duration":"60 mins read","topics_count":6,"tutor":1,"expanded":false,"topics":[{"id":5,"topic_name":"Diving into the NodeJS github repo","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-09","description":"As we know, each module in Node.js has its own scope. How does Node.js achieve this? In JavaScript, we follow the Principle of Least Privilege (PoLP), which is related to functions and scope. If you're unfamiliar, you can Google it. The idea is to only expose what is necessary to the global scope, keeping everything else private. To achieve PoLP, wrap your code in a function or immediately invoke it (IIFE).\n","topics":["nodejs","javascript"],"duration":"8.00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930703/Portfolio/nodeJsCourse/5.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-5"},{"id":6,"topic_name":"libuv & async IO in Node.js","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-10","description":"If you read Node.js's definition, it mentions an event-driven architecture and its ability to handle asynchronous I/O. These two concepts are crucial to understand, so take your time to read and grasp them thoroughly. We know JavaScript is a synchronous, single-threaded language, meaning the code runs in one direction like a one-way road, with one task executing at a time.\n","topics":["nodejs","javascript"],"duration":"8:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930703/Portfolio/nodeJsCourse/6.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-6"},{"id":7,"topic_name":"sync, async, setTimeoutZero in Node.js","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-11","description":"In the last few sessions, we have seen how Node.js code runs. If something is synchronous, the V8 engine handles it, or in case of asynchronous tasks, libUV steps in. You can think of Node.js having two best friends, like Jai and Veeru. Whenever a problem (or code) comes in, they handle it accordingly.\n","topics":["nodejs","javascript"],"duration":"9:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930704/Portfolio/nodeJsCourse/7.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-7"},{"id":8,"topic_name":"Deep dive into v8 JS Engine","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-12","description":"Now, let's focus on one of Node.js's best friends, the V8 Engine. It takes the code and runs it. Before doing anything, I just want you to read this carefully.\n","topics":["nodejs","javascript"],"duration":"5:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930704/Portfolio/nodeJsCourse/8.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-8"},{"id":9,"topic_name":"libuv & Event Loop","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-13","description":"As we know, Node.js has two main parts, like the duo Jai and Veeru: the V8 engine and libuv. Let’s take a closer look at libuv. Just like the V8 engine has its hidden parts, you can learn more about it by clicking here. Now, let’s focus on libuv.\n","topics":["nodejs","javascript"],"duration":"15:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930709/Portfolio/nodeJsCourse/9.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-9"},{"id":10,"topic_name":"LibUV Thread Pool - Deep Dive","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-14","description":"Welcome back! If you haven’t read the previous blog about the two friends, go and check that out first because things are getting more interesting. We’ve received an official FIR against Node.js, and when Node.js faced trouble, it called in its two best friends for help.\n","topics":["nodejs","javascript"],"duration":"15:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930716/Portfolio/nodeJsCourse/10.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-10"}]}],"readingTime":{"text":"3 min read","minutes":2.785,"time":167100,"words":557},"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"image.png","src":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930701/Portfolio/nodeJsCourse/34_qsyubv.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"what-is-nodejs"},"children":[{"type":"text","value":"What is Node.js?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In the evolving landscape of web development, "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Node.js"}]},{"type":"text","value":" has emerged as a game-changer - bringing JavaScript to the server side and enabling full-stack development using a single language. Whether you're building APIs, microservices, or real-time applications, understanding Node.js is key to creating high-performance backend systems. This blog explores what Node.js is, why it's so powerful, and how you can leverage it to build modern server-side applications."}]},{"type":"element","tag":"h2","props":{"id":"nodejs-development-lifecycle"},"children":[{"type":"text","value":"Node.js Development Lifecycle"}]},{"type":"element","tag":"tabs-container","props":{":tabs":"[{\"id\":\"planning\",\"title\":\"Planning\",\"icon\":\"heroicons:light-bulb\",\"description\":\"Project planning and requirement analysis\",\"content\":\"<p>Plan your Node.js project effectively with these essential steps:</p><ul><li><strong>Define project scope and requirements</strong> - Clearly outline what your application needs to do</li><li><strong>Choose appropriate frameworks and tools</strong> - Select the right tech stack for your needs</li><li><strong>Set up development environment</strong> - Configure your workspace for maximum productivity</li><li><strong>Plan database architecture</strong> - Design your data structure and relationships</li><li><strong>Create project timeline</strong> - Set realistic milestones and deadlines</li><li><strong>Identify potential risks</strong> - Plan for common challenges and bottlenecks</li></ul>\"},{\"id\":\"setup\",\"title\":\"Setup & Config\",\"icon\":\"heroicons:cog-6-tooth\",\"description\":\"Environment setup and configuration\",\"content\":\"<p>Set up your development environment for optimal Node.js development:</p><ul><li><strong>Install Node.js and npm/yarn</strong> - Get the latest stable version</li><li><strong>Configure package.json</strong> - Set up your project metadata and dependencies</li><li><strong>Set up linting and formatting</strong> - Use ESLint and Prettier for code quality</li><li><strong>Configure environment variables</strong> - Manage different environments securely</li><li><strong>Set up Git and version control</strong> - Initialize repository and branching strategy</li><li><strong>Configure IDE/Editor</strong> - Install extensions and configure debugging</li></ul>\"},{\"id\":\"development\",\"title\":\"Development\",\"icon\":\"heroicons:code-bracket\",\"description\":\"Core application development\",\"content\":\"<p>Build your Node.js application with best practices:</p><ul><li><strong>Create modular code structure</strong> - Organize your codebase for maintainability</li><li><strong>Implement business logic</strong> - Write clean, readable, and efficient code</li><li><strong>Set up routing and middleware</strong> - Handle HTTP requests and responses properly</li><li><strong>Integrate databases and APIs</strong> - Connect to data sources and external services</li><li><strong>Handle errors gracefully</strong> - Implement proper error handling and logging</li><li><strong>Follow security best practices</strong> - Protect against common vulnerabilities</li></ul>\"},{\"id\":\"testing\",\"title\":\"Testing\",\"icon\":\"heroicons:beaker\",\"description\":\"Testing and quality assurance\",\"content\":\"<p>Ensure code quality through comprehensive testing:</p><ul><li><strong>Write unit tests with Jest</strong> - Test individual functions and modules</li><li><strong>Integration testing with Supertest</strong> - Test API endpoints and workflows</li><li><strong>API testing and validation</strong> - Verify request/response behavior</li><li><strong>Performance testing</strong> - Check application speed and scalability</li><li><strong>Security testing</strong> - Scan for vulnerabilities and weak points</li><li><strong>Code coverage analysis</strong> - Ensure comprehensive test coverage</li></ul>\"},{\"id\":\"deployment\",\"title\":\"Deployment\",\"icon\":\"heroicons:rocket-launch\",\"description\":\"Production deployment\",\"content\":\"<p>Deploy your application to production safely:</p><ul><li><strong>Choose hosting platform</strong> - Select from Heroku, AWS, Vercel, or others</li><li><strong>Set up CI/CD pipelines</strong> - Automate testing and deployment</li><li><strong>Configure production environment</strong> - Set up environment variables and secrets</li><li><strong>Monitor application performance</strong> - Set up logging and monitoring tools</li><li><strong>Database migration and backup</strong> - Ensure data safety and consistency</li><li><strong>SSL certificates and security</strong> - Secure your application and data</li></ul>\"},{\"id\":\"maintenance\",\"title\":\"Maintenance\",\"icon\":\"heroicons:wrench-screwdriver\",\"description\":\"Ongoing maintenance and scaling\",\"content\":\"<p>Maintain and scale your application effectively:</p><ul><li><strong>Monitor application health</strong> - Track performance metrics and uptime</li><li><strong>Update dependencies regularly</strong> - Keep packages secure and up-to-date</li><li><strong>Optimize performance</strong> - Identify and fix bottlenecks</li><li><strong>Scale based on usage patterns</strong> - Handle increased traffic and load</li><li><strong>Bug fixes and feature updates</strong> - Respond to user feedback and requirements</li><li><strong>Documentation maintenance</strong> - Keep documentation current and useful</li></ul>\"}]","defaultTab":"planning"},"children":[]},{"type":"element","tag":"h2","props":{"id":"defining-nodejs"},"children":[{"type":"text","value":"Defining Node.js"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Node.js is an "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"open-source, event-driven JavaScript runtime"}]},{"type":"text","value":" built on Chrome’s V8 engine. It allows developers to write backend code using JavaScript, traditionally a frontend language, and execute it outside the browser."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In simple terms, Node.js lets you use JavaScript to build fast, scalable server-side applications. It’s particularly known for handling concurrent connections with minimal overhead, making it ideal for I/O-heavy operations such as file handling, database interactions, and network communication."}]},{"type":"element","tag":"h2","props":{"id":"why-nodejs-matters"},"children":[{"type":"text","value":"Why Node.js Matters"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Node.js has become a go-to technology for building backend services in modern web applications. Here's why it stands out:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Asynchronous & Non-blocking"}]},{"type":"text","value":": Handles multiple requests concurrently without blocking the main thread."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"High Performance"}]},{"type":"text","value":": Built on the V8 engine, Node.js executes JavaScript at lightning speed."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Scalable Architecture"}]},{"type":"text","value":": Perfect for building microservices and real-time systems."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Vast Ecosystem"}]},{"type":"text","value":": With npm, the largest package registry, developers have access to countless open-source tools and libraries."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Unified Stack"}]},{"type":"text","value":": Use JavaScript across both frontend and backend, simplifying development and collaboration."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Active Community"}]},{"type":"text","value":": Extensive community support and regular updates make Node.js a future-proof choice."}]}]},{"type":"element","tag":"h2","props":{"id":"why-enroll-in-nodejs-deep-dive"},"children":[{"type":"text","value":"Why Enroll in NodeJS Deep Dive?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Node.js has become the backbone of modern web applications — from startups building real-time chat apps to enterprises managing millions of API requests per second. If you’re looking to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"master backend development"}]},{"type":"text","value":", this course is designed to give you both "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"theoretical depth"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"hands-on skills"}]},{"type":"text","value":" that will set you apart."}]},{"type":"element","tag":"h2","props":{"id":"what-youll-gain-from-this-course"},"children":[{"type":"text","value":"What You’ll Gain from This Course"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Strong Fundamentals"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nUnderstand the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"what"}]},{"type":"text","value":" and "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"why"}]},{"type":"text","value":" behind Node.js — from its event-driven architecture to how the V8 engine and libuv power asynchronous programming."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Practical, Hands-On Learning"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nNo endless slides! You’ll install Node.js, write real code, create HTTP servers, connect to databases, and build full APIs from scratch."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Master the Node.js Internals"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nDive deep into the event loop, thread pool, and async I/O so you’ll know exactly how Node.js executes your code behind the scenes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Full Backend Application Development"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nLearn to use "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Express.js"}]},{"type":"text","value":" for REST APIs, integrate "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"MongoDB"}]},{"type":"text","value":" for data storage, and apply best practices in real projects."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Security & Authentication"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nGet the skills to secure your applications using JWT, bcrypt, and modern security practices."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Testing & Deployment"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nWrite tests with Jest & Supertest, then deploy your apps to platforms like AWS, Heroku, or Vercel."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Advanced Scaling & Optimization"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\nExplore clustering, worker threads, and performance tuning techniques to build production-ready, scalable applications."}]}]},{"type":"element","tag":"h2","props":{"id":"who-is-this-course-for"},"children":[{"type":"text","value":"Who Is This Course For?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Beginners who know JavaScript and want to step into backend development."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Frontend developers who want to become "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"full-stack engineers"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Backend developers looking to strengthen their knowledge of "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Node.js internals"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Anyone curious about how "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"asynchronous programming"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"event loops"}]},{"type":"text","value":" really work."}]}]},{"type":"element","tag":"h2","props":{"id":"benefits-after-completing-the-course"},"children":[{"type":"text","value":"Benefits After Completing the Course"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Build "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"real-world backend applications"}]},{"type":"text","value":" with confidence."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Understand "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"how Node.js works under the hood"}]},{"type":"text","value":" — not just how to use it."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Be job-ready for roles like "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Backend Developer"}]},{"type":"text","value":", "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Full-Stack Engineer"}]},{"type":"text","value":", or "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"API Developer"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Gain the ability to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"debug, scale, and optimize"}]},{"type":"text","value":" applications like a pro."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"A strong foundation to move into advanced areas like "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"microservices"}]},{"type":"text","value":", "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"GraphQL APIs"}]},{"type":"text","value":", and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"serverless development"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By the end of this course, you’ll not only be able to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"use Node.js"}]},{"type":"text","value":", you’ll truly "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"understand Node.js"}]},{"type":"text","value":" — and that’s what makes the difference between writing code and becoming a great developer."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"what-is-nodejs","depth":2,"text":"What is Node.js?"},{"id":"nodejs-development-lifecycle","depth":2,"text":"Node.js Development Lifecycle"},{"id":"defining-nodejs","depth":2,"text":"Defining Node.js"},{"id":"why-nodejs-matters","depth":2,"text":"Why Node.js Matters"},{"id":"why-enroll-in-nodejs-deep-dive","depth":2,"text":"Why Enroll in NodeJS Deep Dive?"},{"id":"what-youll-gain-from-this-course","depth":2,"text":"What You’ll Gain from This Course"},{"id":"who-is-this-course-for","depth":2,"text":"Who Is This Course For?"},{"id":"benefits-after-completing-the-course","depth":2,"text":"Benefits After Completing the Course"}]}},"_type":"markdown","_id":"content:courses:01-beginner-to-advance-nodejs.md","_source":"content","_file":"courses/01-beginner-to-advance-nodejs.md","_stem":"courses/01-beginner-to-advance-nodejs","_extension":"md","sitemap":{"loc":"/courses/01-beginner-to-advance-nodejs"}}