[{"_path":"/courses/01-beginner-to-advance-nodejs","_dir":"courses","_draft":false,"_partial":false,"_locale":"","title":"NodeJS Deep Dive","description":"Node.js is a powerful JavaScript runtime that enables fast, scalable, and event-driven server-side development. This course offers an in-depth exploration of Node.js internals - covering its architecture, core concepts, and essential components such as the JavaScript engine and libuv. You'll gain a solid understanding of the Node.js ecosystem, including how its asynchronous model and event loop function under the hood. With a strong focus on hands-on learning, the course guides you through building real-world backend applications from scratch using Express.js and MongoDB.","time":"1hr 30 mins","tutor":1,"video":false,"topics":["nodejs","javascript"],"content":[{"module_id":1,"module_name":"Getting Started with Node.js","module_duration":"25 mins read","topics_count":4,"tutor":1,"expanded":false,"topics":[{"id":1,"topic_name":"Introduction to NodeJS","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-05","description":"Node.js is a high-performance JavaScript runtime designed for building fast, scalable server-side applications. With its event-driven, non-blocking architecture, it efficiently handles multiple requests, making it ideal for real-time applications like chat apps and streaming services. By the end, you’ll have a strong foundation in Node.js, enabling you to build scalable, high-performance applications from scratch.\n","topics":["nodejs","javascript"],"duration":"3:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930701/Portfolio/nodeJsCourse/1_dekvuz.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-1"},{"id":2,"topic_name":"JavaScript on Server","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-06","description":"Discover how JavaScript powers server-side development with Node.js, transforming the way web applications are built. Node.js is a fast, scalable runtime that enables asynchronous, event-driven programming, making it ideal for real-time applications like chat apps and streaming services. You'll also learn to build server-side applications from scratch, manage dependencies with npm, and use frameworks like Express.js.\n","topics":["nodejs","javascript"],"duration":"5:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930701/Portfolio/nodeJsCourse/2_zzsbpy.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-2"},{"id":3,"topic_name":"Let's write code","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-07","description":"Go to Node.js website and download the latest version, If you are struggling in installing feel free to contact me , we can schedule a 5min meeting I will help you to download Node.js in to your system , Best way to download it , Go to Prebuilt installer and download a file and install it by executing by dowload file.\n","topics":["nodejs","javascript"],"duration":"5:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930702/Portfolio/nodeJsCourse/3_xveryy.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-3"},{"id":4,"topic_name":"Module.export & require","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-08","description":"As you saw in the last episode, we wrote our first line of code in Node.js. Now, we could just keep adding whatever we want to app.js, and technically, it would work. But that's not the best way to do things because the file would get cluttered and hard to manage. Instead, we need multiple files.So, you'll use require to include different modules into your main file.\n","topics":["nodejs","javascript"],"duration":"5:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930702/Portfolio/nodeJsCourse/4.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-4"}]},{"module_id":2,"module_name":"Node.js Internals & Core Concepts","module_duration":"60 mins read","topics_count":6,"tutor":1,"expanded":false,"topics":[{"id":5,"topic_name":"Diving into the NodeJS github repo","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-09","description":"As we know, each module in Node.js has its own scope. How does Node.js achieve this? In JavaScript, we follow the Principle of Least Privilege (PoLP), which is related to functions and scope. If you're unfamiliar, you can Google it. The idea is to only expose what is necessary to the global scope, keeping everything else private. To achieve PoLP, wrap your code in a function or immediately invoke it (IIFE).\n","topics":["nodejs","javascript"],"duration":"8.00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930703/Portfolio/nodeJsCourse/5.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-5"},{"id":6,"topic_name":"libuv & async IO in Node.js","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-10","description":"If you read Node.js's definition, it mentions an event-driven architecture and its ability to handle asynchronous I/O. These two concepts are crucial to understand, so take your time to read and grasp them thoroughly. We know JavaScript is a synchronous, single-threaded language, meaning the code runs in one direction like a one-way road, with one task executing at a time.\n","topics":["nodejs","javascript"],"duration":"8:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930703/Portfolio/nodeJsCourse/6.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-6"},{"id":7,"topic_name":"sync, async, setTimeoutZero in Node.js","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-11","description":"In the last few sessions, we have seen how Node.js code runs. If something is synchronous, the V8 engine handles it, or in case of asynchronous tasks, libUV steps in. You can think of Node.js having two best friends, like Jai and Veeru. Whenever a problem (or code) comes in, they handle it accordingly.\n","topics":["nodejs","javascript"],"duration":"9:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930704/Portfolio/nodeJsCourse/7.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-7"},{"id":8,"topic_name":"Deep dive into v8 JS Engine","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-12","description":"Now, let's focus on one of Node.js's best friends, the V8 Engine. It takes the code and runs it. Before doing anything, I just want you to read this carefully.\n","topics":["nodejs","javascript"],"duration":"5:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930704/Portfolio/nodeJsCourse/8.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-8"},{"id":9,"topic_name":"libuv & Event Loop","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-13","description":"As we know, Node.js has two main parts, like the duo Jai and Veeru: the V8 engine and libuv. Let’s take a closer look at libuv. Just like the V8 engine has its hidden parts, you can learn more about it by clicking here. Now, let’s focus on libuv.\n","topics":["nodejs","javascript"],"duration":"15:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930709/Portfolio/nodeJsCourse/9.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-9"},{"id":10,"topic_name":"LibUV Thread Pool - Deep Dive","sub_topic":"NodeJS Basics - Module 1","publish_date":"2025-04-14","description":"Welcome back! If you haven’t read the previous blog about the two friends, go and check that out first because things are getting more interesting. We’ve received an official FIR against Node.js, and when Node.js faced trouble, it called in its two best friends for help.\n","topics":["nodejs","javascript"],"duration":"15:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1757930716/Portfolio/nodeJsCourse/10.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"beginner-to-advance-nodejs-1-10"}]}],"readingTime":{"text":"3 min read","minutes":2.785,"time":167100,"words":557},"_type":"markdown","_id":"content:courses:01-beginner-to-advance-nodejs.md","_source":"content","_file":"courses/01-beginner-to-advance-nodejs.md","_stem":"courses/01-beginner-to-advance-nodejs","_extension":"md","sitemap":{"loc":"/courses/01-beginner-to-advance-nodejs"}},{"_path":"/courses/02-frontend-system-design","_dir":"courses","_draft":false,"_partial":false,"_locale":"","title":"Frontend System Design","description":"This course is designed to take you from Zero to Hero in Frontend System Design. Through a combination of in-depth tutorials and practical, real-world examples, you’ll gain hands-on experience in designing scalable and efficient frontend architectures. The curriculum follows a ‘learn by doing’ approach, ensuring that even the most complex topics are grounded in real application scenarios. Whether you're aiming to build robust frontend systems or preparing for your next Frontend System Design interview, this course equips you with the skills and confidence to succeed. Start your journey today.","tutor":1,"time":"5hr 30 mins","video":false,"topics":["nodejs","javascript"],"content":[{"module_id":1,"module_name":"Networking","module_duration":"40 mins read","topics_count":5,"tutor":1,"expanded":false,"topics":[{"id":1,"topic_name":"How the Web Works","sub_topic":"Networking","publish_date":"2025-03-01","description":"Network is a core part of software, as the frontend needs data and the backend sends it. All of this happens through the network. How is data transferred over the internet? How does it reach the client, and what protocols are required? These are essential concepts for software development. We need to understand what happens when we type \"google.com,\" what DNS is, and its role in the process.\n","topics":["nodejs","javascript"],"duration":"14:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744045763/Portfolio/FrontendSystemDesignCourse/1_lxnuab.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-1-1"},{"id":2,"topic_name":"Communication Protocols","sub_topic":"Networking","publish_date":"2025-03-02","description":"A communications protocol is a set of formal rules describing how to transmit or exchange data, especially across a network. A standardised communications protocol is one that has been codified as a standard. Examples of these include WiFi, the Internet Protocol, and the Hypertext Transfer Protocol (HTTP).\n","topics":["nodejs","javascript"],"duration":"3:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744045766/Portfolio/FrontendSystemDesignCourse/2_qlrcpc.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-1-2"},{"id":3,"topic_name":"HTTP Headers Methods Status Codes and Rest API Deep Dive","sub_topic":"Networking","publish_date":"2025-03-03","description":"If you are a junior developer, a senior developer, or just a complete newbie, this is going to be a great place to learn about REST APIs—what they are, why they are used, and how they work. This is going to be a long blog, so it’s for serious readers. If you prefer short TikTok-like videos for instant information, this might not be for you. Let’s get started!\n","topics":["nodejs","javascript"],"duration":"22:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744045770/Portfolio/FrontendSystemDesignCourse/3_sskfuy.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-1-3"},{"id":4,"topic_name":"Why GraphQL over Rest APIs","sub_topic":"Networking","publish_date":"2025-03-04","description":"Many companies today use GraphQL. In this blog, we’ll explore what GraphQL is, its benefits, and why it’s so popular. Suppose your app needs information about continents, countries, and languages. If you’re using REST APIs, you’ll likely call multiple APIs to fetch this data and then organize it for your frontend. Be patient—it’s not an Instagram Reel, but for serious learners, it’ll be worth the read.\n","topics":["nodejs","javascript"],"duration":"11:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744045780/Portfolio/FrontendSystemDesignCourse/4_iildzs.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-1-4"},{"id":5,"topic_name":"A quick overview of gRPC","sub_topic":"Networking","publish_date":"2025-03-05","description":"It's kind of like a sibling to REST API or GraphQL, enabling communication with the server in a unique way. RPC stands for Remote Procedure Call, and the \"g\" in gRPC stands for Google, as it was created by Google.\n","topics":["nodejs","javascript"],"duration":"6.00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744045783/Portfolio/FrontendSystemDesignCourse/5_uc5xlf.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-1-5"}]},{"module_id":2,"module_name":"Communication","module_duration":"35 mins read","topics_count":5,"tutor":1,"expanded":false,"topics":[{"id":6,"topic_name":"What is short polling? Learn with example","sub_topic":"Networking","publish_date":"2025-03-06","description":"Dive into short polling methodologies. Explore the technique of frequent requests to servers at fixed intervals, enabling frontend applications to obtain recent data updates for dynamic content.\n","topics":["nodejs","javascript"],"duration":"14:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744108647/Portfolio/FrontendSystemDesignCourse/6_llcndo.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-2-1"},{"id":7,"topic_name":"Practical Guide Long Polling","sub_topic":"Networking","publish_date":"2025-03-07","description":"Explore long polling techniques. Learn how continuous connections to servers facilitate real-time data updates, enabling frontend applications to receive immediate data upon availability, optimizing user experiences.\n","topics":["nodejs","javascript"],"duration":"3:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744108670/Portfolio/FrontendSystemDesignCourse/7_y3axa8.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-2-2"},{"id":8,"topic_name":"Web Socket","sub_topic":"Networking","publish_date":"2025-03-08","description":"Discover the power of Web Sockets. Learn to establish persistent connections facilitating real-time, bidirectional communication between clients and servers, enhancing interactivity and responsiveness in frontend applications.\n","topics":["nodejs","javascript"],"duration":"22:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744108685/Portfolio/FrontendSystemDesignCourse/8_botlhe.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-2-3"},{"id":9,"topic_name":"Server Sent Events - A Real time communication","sub_topic":"Networking","publish_date":"2025-03-09","description":"Delve into Server-Sent Events. Understand how servers push data to clients, enabling continuous updates in frontend applications without the need for repeated requests, optimizing data streaming.\n","topics":["nodejs","javascript"],"duration":"11:00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744108696/Portfolio/FrontendSystemDesignCourse/9_fvmoja.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-2-4"},{"id":10,"topic_name":"Introduction to Web hooks","sub_topic":"Networking","publish_date":"2025-03-10","description":"Understand WebHooks' functionalities. Learn how they trigger instant notifications and events, allowing frontend systems to react promptly to external changes or specific actions, ensuring responsiveness and agility.\n","topics":["nodejs","javascript"],"duration":"6.00 mins read","photo_url":"https://res.cloudinary.com/duojkrgue/image/upload/v1744108709/Portfolio/FrontendSystemDesignCourse/10_ahspdw.png","auther_name":"Rahul Aher","is_on_youtube":false,"_path":"frontend-system-design-2-5"}]}],"readingTime":{"text":"3 min read","minutes":2.745,"time":164700,"words":549},"_type":"markdown","_id":"content:courses:02-frontend-system-design.md","_source":"content","_file":"courses/02-frontend-system-design.md","_stem":"courses/02-frontend-system-design","_extension":"md","sitemap":{"loc":"/courses/02-frontend-system-design"}},{"_path":"/courses/aws-solution-architect","_dir":"courses","_draft":false,"_partial":false,"_locale":"","title":"AWS Certified Solutions Architect","description":"The AWS Certified Solutions Architect certification is one of the most prestigious and in-demand credentials in cloud computing. This course is thoughtfully designed for anyone looking to master the core components of Amazon Web Services (AWS) and build a strong foundation in cloud architecture. Through comprehensive lessons and hands-on practice, you'll gain the skills needed to design scalable, secure, and cost-efficient cloud solutions. By the end of this training, you'll be fully prepared to pass the associate-level AWS Certified Solutions Architect exam with confidence.","tutor":1,"video":true,"topics":["aws","solution-architect"],"time":"6:54 mins","content":[{"module_id":1,"module_name":"Introduction","module_duration":"10 mins","topics_count":2,"expanded":false,"tutor":1,"topics":[{"id":1,"topic_name":"Exam Guide","sub_topic":"Associate SAA C03 Exam Guide","publish_date":"2024-09-28","description":"AWS Certified Solutions Architect is one of the most popular cloud computing certifications. In this full course taught by an expert trainer, you will learn the major parts of Amazon Web Services, and prepare for the associate-level AWS Certified Solutions Architect exam. By the end of this course, you will be ready to take the AWS Certified Solutions Architect Associate exam - and pass!\n","topics":["aws","solution-architect"],"duration":"6:54 mins","videoUrl":"https://www.youtube.com/embed/ejZm0c_OhYM?si=_EDroaJF7rPD1dvL","auther_name":"Rahul Aher","is_on_youtube":true,"_path":"aws-solution-architect-1-1"}]},{"module_id":2,"module_name":"AWS Fundamentals","module_duration":"44 mins","topics_count":3,"tutor":1,"topics":[{"id":1,"topic_name":"The Building Blocks of AWS - Availability Zones and Regions","publish_date":"2024-10-15","description":"Learn about AWS Regions and Availability Zones (AZs), the foundation of AWS's global infrastructure. Regions are geographically isolated locations, each containing multiple AZs. These AZs are designed for high availability, fault tolerance, and low latency, enabling applications to stay resilient and perform efficiently across the globe.\n","topics":["aws","solution-architect"],"duration":"8:27 mins","videoUrl":"https://www.youtube.com/embed/SVW2HBZ3QNA?si=TsD1JykWf5LYzBil","auther_name":"Rahul Aher","is_on_youtube":true,"_path":"aws-solution-architect-2-1"},{"id":2,"topic_name":"Who Owns What in the Cloud?","publish_date":"2024-10-15","description":"It explores the shared responsibility model of cloud computing. In this model, AWS manages the infrastructure's security, such as physical hardware, networking, and global infrastructure, while customers are responsible for securing their applications, data, and access configurations. Understanding this division is crucial for designing secure and compliant cloud architectures.\n","topics":["aws","solution-architect"],"duration":"5:44 mins","videoUrl":"https://www.youtube.com/embed/izQlU1sZkNg?si=q_GceoOp1N6nWdNZ","auther_name":"Rahul Aher","is_on_youtube":true,"_path":"aws-solution-architect-2-2"},{"id":3,"topic_name":"Compute, Storage, Databases, and Networking","publish_date":"2024-10-15","description":"It covers the core AWS services that power cloud applications. Compute services like EC2 and Lambda handle processing, while storage solutions like S3 and EBS manage data. Databases such as RDS and DynamoDB ensure efficient data management, and networking tools like VPC and CloudFront enable secure and scalable connectivity. These services form the foundation of any AWS architecture.\n","topics":["aws","solution-architect"],"duration":"8:27 mins","videoUrl":"https://www.youtube.com/embed/ULfTWvsHw20?si=O7d0O9g4OH5sZHRS","auther_name":"Rahul Aher","is_on_youtube":true,"_path":"aws-solution-architect-2-3"}]}],"readingTime":{"text":"4 min read","minutes":3.31,"time":198600,"words":662},"_type":"markdown","_id":"content:courses:aws-solution-architect.md","_source":"content","_file":"courses/aws-solution-architect.md","_stem":"courses/aws-solution-architect","_extension":"md","sitemap":{"loc":"/courses/aws-solution-architect"}},{"_path":"/courses/beginner-system-design","_dir":"courses","_draft":false,"_partial":false,"_locale":"","title":"System Design","description":"System Design is the art of architecting robust, scalable, and efficient systems by defining their structure, components, modules, interfaces, and data flow. It transforms user requirements into a detailed technical blueprint that drives the development process. The ultimate goal is to build systems that not only fulfill functional needs but also excel in scalability, maintainability, and performance—ensuring long-term reliability and adaptability in real-world environments.","time":"8:43 mins","tutor":1,"video":true,"topics":["system-design"],"content":[{"module_id":1,"module_name":"Introduction","module_duration":"40 mins","topics_count":3,"tutor":1,"expanded":false,"topics":[{"id":1,"topic_name":"What is System Design?","sub_topic":"System Design Basics","publish_date":"2024-11-05","description":"Systems Design involves creating a detailed blueprint for a system’s architecture, components, modules, interfaces, and data to meet specific requirements. It translates user needs into an organized structure, guiding implementation. The goal is to ensure scalability, maintainability, and performance while building an efficient system.\n","topics":["system-design"],"duration":"8:43 mins","videoUrl":"https://www.youtube.com/embed/K9EFon58_UI?si=95in2rvIl1h6pDxU","auther_name":"Rahul Aher","is_on_youtube":true,"_path":"beginner-system-design-1-1"},{"id":2,"topic_name":"How to approach system design?","sub_topic":"System Design Basics","publish_date":"2024-11-27","description":"Learn a structured approach to system design. Start by understanding functional and non-functional requirements, then break the system into components like databases, frontend, backend, and caching. Select tools for scalability, reliability, and performance. Visualize the architecture with diagrams and iterate to optimize and resolve bottlenecks effectively.\n","topics":["system-design"],"duration":"16:23 mins","videoUrl":"https://www.youtube.com/embed/JqcpMz3TykA?si=-rjiVhzMKwsMC9gr","auther_name":"Rahul Aher","is_on_youtube":true,"_path":"beginner-system-design-1-2"},{"id":3,"topic_name":"How do you evaluate that you have built a good system?","sub_topic":"System Design Basics","publish_date":"2024-11-29","description":"In this video, we explore the key metrics, strategies, and frameworks to evaluate whether your system is well-designed, efficient, and scalable. Learn how to assess user satisfaction, performance, maintainability, and more!. Learn how to assess user satisfaction, performance, maintainability, and more!\n","topics":["system-design"],"duration":"8:10 mins","videoUrl":"https://www.youtube.com/embed/F5mNbnsT12E?si=hF5yLA4XZ5XFV-vk","auther_name":"Rahul Aher","is_on_youtube":true,"_path":"beginner-system-design-1-3"}]},{"module_id":2,"module_name":"Databases designing","module_duration":"25 mins","topics_count":2,"tutor":1,"expanded":false,"topics":[{"id":4,"topic_name":"Relational Databases for System Design","sub_topic":"System Design Basics","publish_date":"2024-11-30","description":"Learn everything you need to know relational databases in system design? This video explains how relational databases work, their importance, and best practices for integrating them into scalable systems. Explore key metrics, strategies, and frameworks to evaluate if your system is efficient, scalable, and well-designed. \n","topics":["system-design"],"duration":"19:39 mins","videoUrl":"https://www.youtube.com/embed/g7C8ahBzoRA?si=n4wPLZky6xVqUl4u","auther_name":"Rahul Aher","is_on_youtube":true,"_path":"beginner-system-design-2-1"},{"id":5,"topic_name":"Database Transaction Isolation Levels Explained","sub_topic":"System Design Basics","publish_date":"2024-12-01","description":"Learn everything you need to know about database transaction isolation levels! Understand how they prevent issues like dirty reads, phantom reads, and write conflicts, and when to use each level. Confused by terms like Read Uncommitted, Repeatable Read, or Serializable? This video has clear examples to help you manage concurrency and maintain data integrity.\n","topics":["system-design"],"duration":"18.17 mins","videoUrl":"https://www.youtube.com/embed/edejC34kkBk?si=xRzr-kS7oN9LQpMY","auther_name":"Rahul Aher","is_on_youtube":true,"_path":"beginner-system-design-2-2"}]}],"readingTime":{"text":"3 min read","minutes":2.745,"time":164700,"words":549},"_type":"markdown","_id":"content:courses:beginner-system-design.md","_source":"content","_file":"courses/beginner-system-design.md","_stem":"courses/beginner-system-design","_extension":"md","sitemap":{"loc":"/courses/beginner-system-design"}}]