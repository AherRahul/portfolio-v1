[{"data":1,"prerenderedAt":3292},["ShallowReactive",2],{"content-query-7DSGhr2p1a":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"date":10,"eventName":11,"location":7,"slidesUrl":12,"type":13,"language":14,"topics":15,"readingTime":18,"body":23,"_type":3285,"_id":3286,"_source":3287,"_file":3288,"_stem":3289,"_extension":3290,"sitemap":3291},"/learning/2024-05-19-beginner-data-types-reading-input","learning",false,"","1. Beginner: Data Types + Reading Input","A data type is an attribute associated with a piece of data that tells a computer system how to interpret its value. Understanding data types ensures that data is collected in the preferred format and the value of each property is as expected.","2024-05-19","MODULE 1: Introduction to Programming","https://github.com/AherRahul/portfolio-v1/blob/main/content/learning/2024-05-19-beginner-data-types-reading-input.md","lecture-notes","en",[16,17],"java","beginner-programming",{"text":19,"minutes":20,"time":21,"words":22},"11 min read",10.115,606900,2023,{"type":24,"children":25,"toc":3230},"root",[26,40,45,54,61,71,81,90,98,107,115,119,129,137,183,196,199,208,216,253,265,268,277,285,321,333,344,347,356,364,402,414,423,426,435,443,482,494,503,506,512,517,525,533,541,546,554,562,569,577,586,594,602,610,613,622,627,635,675,687,690,699,704,712,751,763,766,775,780,788,818,830,833,842,847,855,885,897,900,909,914,922,961,973,976,985,993,1032,1044,1053,1056,1062,1070,1079,1119,1122,1131,1136,1144,1173,1176,1185,1190,1198,1226,1244,1247,1256,1264,1294,1306,1309,1318,1326,1354,1372,1375,1384,1392,1420,1423,1429,1442,1450,1459,1467,1505,1517,1520,1529,1537,1576,1594,1607,1610,1619,1627,1663,1675,1678,1684,1692,1700,1708,1736,1746,1769,1772,1778,1783,1796,1804,1812,1820,1823,1831,1839,1875,1893,1896,1904,1912,1950,1962,1970,1983,1986,1992,1997,2010,2018,2026,2064,2071,2079,2082,2090,2098,2134,2146,2149,2157,2165,2203,2215,2218,2224,2232,2240,2248,2256,2264,2272,2280,2283,2291,2299,2338,2358,2361,2369,2377,2415,2433,2436,2444,2452,2488,2500,2509,2512,2520,2528,2547,2555,2563,2581,2589,2597,2615,2618,2624,2632,2640,2648,2656,2664,2667,2673,2681,2689,2694,2697,2703,2708,2717,2725,2732,2812,2849,2854,2860,2878,2883,2886,2895,2903,2940,2943,2952,2960,2998,3003,3006,3015,3025,3031,3039,3206,3216,3219,3224],{"type":27,"tag":28,"props":29,"children":30},"element","p",{},[31,38],{"type":27,"tag":32,"props":33,"children":34},"strong",{},[35],{"type":36,"value":37},"text","A data type is an attribute associated with a piece of data that tells a computer system how to interpret its value.",{"type":36,"value":39}," Understanding data types ensures that data is collected in the preferred format and the value of each property is as expected.",{"type":27,"tag":28,"props":41,"children":42},{},[43],{"type":36,"value":44},"Recap: Start the class with Revising the previous session rules:",{"type":27,"tag":46,"props":47,"children":48},"success",{},[49],{"type":27,"tag":28,"props":50,"children":51},{},[52],{"type":36,"value":53},"There are a lot of quizzes in this session, please take some time to think about the solution on your own before reading further.....",{"type":27,"tag":55,"props":56,"children":58},"h2",{"id":57},"revision-type-casting-rules",[59],{"type":36,"value":60},"Revision: Type Casting Rules",{"type":27,"tag":62,"props":63,"children":64},"ol",{},[65],{"type":27,"tag":66,"props":67,"children":68},"li",{},[69],{"type":36,"value":70},"Int data can be stored in long and there wont be any loss of data, so there wont be any issues.",{"type":27,"tag":72,"props":73,"children":75},"pre",{"code":74},"int a = 10;\nlong b = a;\nSystem.out.print(b); --> 10\n",[76],{"type":27,"tag":77,"props":78,"children":79},"code",{"__ignoreMap":7},[80],{"type":36,"value":74},{"type":27,"tag":62,"props":82,"children":84},{"start":83},2,[85],{"type":27,"tag":66,"props":86,"children":87},{},[88],{"type":36,"value":89},"Long data cannot be stored in int, there can be a loss of data so we will get an error",{"type":27,"tag":72,"props":91,"children":93},{"code":92},"long a = 100;\nint b = a;\nSystem.out.print(b); Error \n",[94],{"type":27,"tag":77,"props":95,"children":96},{"__ignoreMap":7},[97],{"type":36,"value":92},{"type":27,"tag":62,"props":99,"children":101},{"start":100},3,[102],{"type":27,"tag":66,"props":103,"children":104},{},[105],{"type":36,"value":106},"If we want to still force we need to keep explicitly type cast it",{"type":27,"tag":72,"props":108,"children":110},{"code":109},"long a = 100;\nint b = (int)a;\nSystem.out.print(b) --> 100\n",[111],{"type":27,"tag":77,"props":112,"children":113},{"__ignoreMap":7},[114],{"type":36,"value":109},{"type":27,"tag":116,"props":117,"children":118},"hr",{},[],{"type":27,"tag":120,"props":121,"children":122},"blockquote",{},[123],{"type":27,"tag":55,"props":124,"children":126},{"id":125},"q1-what-is-the-output",[127],{"type":36,"value":128},"Q1. What is the output?",{"type":27,"tag":72,"props":130,"children":132},{"code":131},"int a = 10000;\nlong b = a;\nSystem.out.print(b);\n",[133],{"type":27,"tag":77,"props":134,"children":135},{"__ignoreMap":7},[136],{"type":36,"value":131},{"type":27,"tag":138,"props":139,"children":142},"ul",{"className":140},[141],"contains-task-list",[143,156,165,174],{"type":27,"tag":66,"props":144,"children":147},{"className":145},[146],"task-list-item",[148,154],{"type":27,"tag":149,"props":150,"children":153},"input",{"checked":151,"disabled":151,"type":152},true,"checkbox",[],{"type":36,"value":155}," 10000",{"type":27,"tag":66,"props":157,"children":159},{"className":158},[146],[160,163],{"type":27,"tag":149,"props":161,"children":162},{"disabled":151,"type":152},[],{"type":36,"value":164}," Compilation Error",{"type":27,"tag":66,"props":166,"children":168},{"className":167},[146],[169,172],{"type":27,"tag":149,"props":170,"children":171},{"disabled":151,"type":152},[],{"type":36,"value":173}," 100000.0",{"type":27,"tag":66,"props":175,"children":177},{"className":176},[146],[178,181],{"type":27,"tag":149,"props":179,"children":180},{"disabled":151,"type":152},[],{"type":36,"value":182}," 10000L",{"type":27,"tag":120,"props":184,"children":185},{},[186],{"type":27,"tag":28,"props":187,"children":188},{},[189,194],{"type":27,"tag":32,"props":190,"children":191},{},[192],{"type":36,"value":193},"Explanation:",{"type":36,"value":195}," First line we create a variable of type int then we are creating a long type variable \"b\" and trying to store the value of \"a\" in it. This is Implicit Typecasting.",{"type":27,"tag":116,"props":197,"children":198},{},[],{"type":27,"tag":120,"props":200,"children":201},{},[202],{"type":27,"tag":55,"props":203,"children":205},{"id":204},"q2-what-is-the-output",[206],{"type":36,"value":207},"Q2. What is the output?",{"type":27,"tag":72,"props":209,"children":211},{"code":210},"long x = 10000;\nSystem.out.print(x);\n",[212],{"type":27,"tag":77,"props":213,"children":214},{"__ignoreMap":7},[215],{"type":36,"value":210},{"type":27,"tag":138,"props":217,"children":219},{"className":218},[141],[220,228,236,244],{"type":27,"tag":66,"props":221,"children":223},{"className":222},[146],[224,227],{"type":27,"tag":149,"props":225,"children":226},{"disabled":151,"type":152},[],{"type":36,"value":182},{"type":27,"tag":66,"props":229,"children":231},{"className":230},[146],[232,235],{"type":27,"tag":149,"props":233,"children":234},{"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":237,"children":239},{"className":238},[146],[240,243],{"type":27,"tag":149,"props":241,"children":242},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":155},{"type":27,"tag":66,"props":245,"children":247},{"className":246},[146],[248,251],{"type":27,"tag":149,"props":249,"children":250},{"disabled":151,"type":152},[],{"type":36,"value":252}," None of the above",{"type":27,"tag":120,"props":254,"children":255},{},[256],{"type":27,"tag":28,"props":257,"children":258},{},[259,263],{"type":27,"tag":32,"props":260,"children":261},{},[262],{"type":36,"value":193},{"type":36,"value":264}," First line automatic typecasting is happening between Int and Long.",{"type":27,"tag":116,"props":266,"children":267},{},[],{"type":27,"tag":120,"props":269,"children":270},{},[271],{"type":27,"tag":55,"props":272,"children":274},{"id":273},"q3-what-is-the-output",[275],{"type":36,"value":276},"Q3. What is the output?",{"type":27,"tag":72,"props":278,"children":280},{"code":279},"long x = 10000;\nint y = x;\nSystem.out.print(y);\n",[281],{"type":27,"tag":77,"props":282,"children":283},{"__ignoreMap":7},[284],{"type":36,"value":279},{"type":27,"tag":138,"props":286,"children":288},{"className":287},[141],[289,297,305,313],{"type":27,"tag":66,"props":290,"children":292},{"className":291},[146],[293,296],{"type":27,"tag":149,"props":294,"children":295},{"disabled":151,"type":152},[],{"type":36,"value":182},{"type":27,"tag":66,"props":298,"children":300},{"className":299},[146],[301,304],{"type":27,"tag":149,"props":302,"children":303},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":306,"children":308},{"className":307},[146],[309,312],{"type":27,"tag":149,"props":310,"children":311},{"disabled":151,"type":152},[],{"type":36,"value":155},{"type":27,"tag":66,"props":314,"children":316},{"className":315},[146],[317,320],{"type":27,"tag":149,"props":318,"children":319},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":322,"children":323},{},[324],{"type":27,"tag":28,"props":325,"children":326},{},[327,331],{"type":27,"tag":32,"props":328,"children":329},{},[330],{"type":36,"value":193},{"type":36,"value":332}," First line we create a variable of type long then we are creating a int type variable \"y\" and trying to store the value of \"x\" in it. In this acse there is a possiblilty of Data Loss.",{"type":27,"tag":28,"props":334,"children":335},{},[336,342],{"type":27,"tag":77,"props":337,"children":339},{"className":338},[],[340],{"type":36,"value":341},"Error- Possible lossy conversion from long to int",{"type":36,"value":343},".",{"type":27,"tag":116,"props":345,"children":346},{},[],{"type":27,"tag":120,"props":348,"children":349},{},[350],{"type":27,"tag":55,"props":351,"children":353},{"id":352},"q4-what-is-the-output",[354],{"type":36,"value":355},"Q4. What is the output?",{"type":27,"tag":72,"props":357,"children":359},{"code":358},"long x = 1000;\nint y = (int)x;\nSystem.out.print(y);\n",[360],{"type":27,"tag":77,"props":361,"children":362},{"__ignoreMap":7},[363],{"type":36,"value":358},{"type":27,"tag":138,"props":365,"children":367},{"className":366},[141],[368,377,385,394],{"type":27,"tag":66,"props":369,"children":371},{"className":370},[146],[372,375],{"type":27,"tag":149,"props":373,"children":374},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":376}," 1000",{"type":27,"tag":66,"props":378,"children":380},{"className":379},[146],[381,384],{"type":27,"tag":149,"props":382,"children":383},{"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":386,"children":388},{"className":387},[146],[389,392],{"type":27,"tag":149,"props":390,"children":391},{"disabled":151,"type":152},[],{"type":36,"value":393}," 1000L",{"type":27,"tag":66,"props":395,"children":397},{"className":396},[146],[398,401],{"type":27,"tag":149,"props":399,"children":400},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":403,"children":404},{},[405],{"type":27,"tag":28,"props":406,"children":407},{},[408,412],{"type":27,"tag":32,"props":409,"children":410},{},[411],{"type":36,"value":193},{"type":36,"value":413}," Now with this line we are forcing the compiler to typecast it to int. It is explicit Typecasting.",{"type":27,"tag":28,"props":415,"children":416},{},[417],{"type":27,"tag":77,"props":418,"children":420},{"className":419},[],[421],{"type":36,"value":422},"int y = (int)x;",{"type":27,"tag":116,"props":424,"children":425},{},[],{"type":27,"tag":120,"props":427,"children":428},{},[429],{"type":27,"tag":55,"props":430,"children":432},{"id":431},"q5-what-is-the-output",[433],{"type":36,"value":434},"Q5. What is the output?",{"type":27,"tag":72,"props":436,"children":438},{"code":437},"long a = 10000000000L;\nint b = (int)a;\nSystem.out.print(b);\n",[439],{"type":27,"tag":77,"props":440,"children":441},{"__ignoreMap":7},[442],{"type":36,"value":437},{"type":27,"tag":138,"props":444,"children":446},{"className":445},[141],[447,456,465,474],{"type":27,"tag":66,"props":448,"children":450},{"className":449},[146],[451,454],{"type":27,"tag":149,"props":452,"children":453},{"disabled":151,"type":152},[],{"type":36,"value":455}," 10000000000",{"type":27,"tag":66,"props":457,"children":459},{"className":458},[146],[460,463],{"type":27,"tag":149,"props":461,"children":462},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":464}," Random Value",{"type":27,"tag":66,"props":466,"children":468},{"className":467},[146],[469,472],{"type":27,"tag":149,"props":470,"children":471},{"disabled":151,"type":152},[],{"type":36,"value":473}," 10",{"type":27,"tag":66,"props":475,"children":477},{"className":476},[146],[478,481],{"type":27,"tag":149,"props":479,"children":480},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":483,"children":484},{},[485],{"type":27,"tag":28,"props":486,"children":487},{},[488,492],{"type":27,"tag":32,"props":489,"children":490},{},[491],{"type":36,"value":193},{"type":36,"value":493}," Here we are forcing the compiler to store the value 10^10 into int. Because of that overflow will happen.\nAns= Some random value.",{"type":27,"tag":28,"props":495,"children":496},{},[497],{"type":27,"tag":77,"props":498,"children":500},{"className":499},[],[501],{"type":36,"value":502},"int b = (int)a;",{"type":27,"tag":116,"props":504,"children":505},{},[],{"type":27,"tag":55,"props":507,"children":509},{"id":508},"taking-input-from-the-user",[510],{"type":36,"value":511},"Taking input from the user:",{"type":27,"tag":28,"props":513,"children":514},{},[515],{"type":36,"value":516},"Tool to take input from the user: Scanner.",{"type":27,"tag":28,"props":518,"children":519},{},[520],{"type":27,"tag":32,"props":521,"children":522},{},[523],{"type":36,"value":524},"Syntax of Scanner:",{"type":27,"tag":72,"props":526,"children":528},{"code":527},"Scanner scn = new Scanner(System. in);\n",[529],{"type":27,"tag":77,"props":530,"children":531},{"__ignoreMap":7},[532],{"type":36,"value":527},{"type":27,"tag":120,"props":534,"children":535},{},[536],{"type":27,"tag":28,"props":537,"children":538},{},[539],{"type":36,"value":540},"The Scanner class is used to get user input, and it is found in the java.util package.\nTo use the Scanner class, create an object of the class and use any of the available methods found in the Scanner class documentation. In our example, we will use the nextLine() method, which is used to read Strings:",{"type":27,"tag":28,"props":542,"children":543},{},[544],{"type":36,"value":545},"Now in order to use scanner also we need to write one line:",{"type":27,"tag":72,"props":547,"children":549},{"code":548},"import java.util.*;\n",[550],{"type":27,"tag":77,"props":551,"children":552},{"__ignoreMap":7},[553],{"type":36,"value":548},{"type":27,"tag":120,"props":555,"children":556},{},[557],{"type":27,"tag":28,"props":558,"children":559},{},[560],{"type":36,"value":561},"Consider this like in order to play pubg we need to import some files, some packages similarly to use scanner we need to import java files.",{"type":27,"tag":563,"props":564,"children":566},"h3",{"id":565},"take-input-and-print-the-output",[567],{"type":36,"value":568},"Take Input and print the output:",{"type":27,"tag":72,"props":570,"children":572},{"code":571},"int x = scn.nextInt();\nSystem.out.print(x);\n",[573],{"type":27,"tag":77,"props":574,"children":575},{"__ignoreMap":7},[576],{"type":36,"value":571},{"type":27,"tag":28,"props":578,"children":579},{},[580,584],{"type":27,"tag":32,"props":581,"children":582},{},[583],{"type":36,"value":193},{"type":36,"value":585},"\nHere we are taking the help of scanner by using its name scn and asking the user for an integer value which we will store in \"x\" varaible.",{"type":27,"tag":120,"props":587,"children":588},{},[589],{"type":27,"tag":28,"props":590,"children":591},{},[592],{"type":36,"value":593},"Just try to give different integer values in the custom input and explain how it got printed.",{"type":27,"tag":28,"props":595,"children":596},{},[597],{"type":27,"tag":32,"props":598,"children":599},{},[600],{"type":36,"value":601},"Take input and print twice the number:",{"type":27,"tag":72,"props":603,"children":605},{"code":604},"int y = scn.nextInt();\nSystem.out.print(2 * y);\n",[606],{"type":27,"tag":77,"props":607,"children":608},{"__ignoreMap":7},[609],{"type":36,"value":604},{"type":27,"tag":116,"props":611,"children":612},{},[],{"type":27,"tag":120,"props":614,"children":615},{},[616],{"type":27,"tag":55,"props":617,"children":619},{"id":618},"q1-predict-the-output-for-given-input",[620],{"type":36,"value":621},"Q1 Predict the output for given input:",{"type":27,"tag":28,"props":623,"children":624},{},[625],{"type":36,"value":626},"Input: 100",{"type":27,"tag":72,"props":628,"children":630},{"code":629},"scanner sc = new scanner(System.in);\nint xyz = sc.nextInt();\nSystem.out.print(xyz);\n",[631],{"type":27,"tag":77,"props":632,"children":633},{"__ignoreMap":7},[634],{"type":36,"value":629},{"type":27,"tag":138,"props":636,"children":638},{"className":637},[141],[639,648,657,666],{"type":27,"tag":66,"props":640,"children":642},{"className":641},[146],[643,646],{"type":27,"tag":149,"props":644,"children":645},{"disabled":151,"type":152},[],{"type":36,"value":647}," xyz",{"type":27,"tag":66,"props":649,"children":651},{"className":650},[146],[652,655],{"type":27,"tag":149,"props":653,"children":654},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":656}," Error",{"type":27,"tag":66,"props":658,"children":660},{"className":659},[146],[661,664],{"type":27,"tag":149,"props":662,"children":663},{"disabled":151,"type":152},[],{"type":36,"value":665}," 100",{"type":27,"tag":66,"props":667,"children":669},{"className":668},[146],[670,673],{"type":27,"tag":149,"props":671,"children":672},{"disabled":151,"type":152},[],{"type":36,"value":674}," Goodnight :)",{"type":27,"tag":120,"props":676,"children":677},{},[678],{"type":27,"tag":28,"props":679,"children":680},{},[681,685],{"type":27,"tag":32,"props":682,"children":683},{},[684],{"type":36,"value":193},{"type":36,"value":686}," At line 1, scanner is in small letter. Because Java is case sensitive.",{"type":27,"tag":116,"props":688,"children":689},{},[],{"type":27,"tag":120,"props":691,"children":692},{},[693],{"type":27,"tag":55,"props":694,"children":696},{"id":695},"q2-predict-the-output-for-given-input",[697],{"type":36,"value":698},"Q2 Predict the output for given input:",{"type":27,"tag":28,"props":700,"children":701},{},[702],{"type":36,"value":703},"Input: 594",{"type":27,"tag":72,"props":705,"children":707},{"code":706},"Scanner sc = new Scanner(system.in);\nint abc = sc.nextInt();\nSystem.out.print(abc);\n",[708],{"type":27,"tag":77,"props":709,"children":710},{"__ignoreMap":7},[711],{"type":36,"value":706},{"type":27,"tag":138,"props":713,"children":715},{"className":714},[141],[716,725,733,742],{"type":27,"tag":66,"props":717,"children":719},{"className":718},[146],[720,723],{"type":27,"tag":149,"props":721,"children":722},{"disabled":151,"type":152},[],{"type":36,"value":724}," 594",{"type":27,"tag":66,"props":726,"children":728},{"className":727},[146],[729,732],{"type":27,"tag":149,"props":730,"children":731},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":66,"props":734,"children":736},{"className":735},[146],[737,740],{"type":27,"tag":149,"props":738,"children":739},{"disabled":151,"type":152},[],{"type":36,"value":741}," abc",{"type":27,"tag":66,"props":743,"children":745},{"className":744},[146],[746,749],{"type":27,"tag":149,"props":747,"children":748},{"disabled":151,"type":152},[],{"type":36,"value":750}," Only here to watch!",{"type":27,"tag":120,"props":752,"children":753},{},[754],{"type":27,"tag":28,"props":755,"children":756},{},[757,761],{"type":27,"tag":32,"props":758,"children":759},{},[760],{"type":36,"value":193},{"type":36,"value":762}," Error: S in System should be capital.",{"type":27,"tag":116,"props":764,"children":765},{},[],{"type":27,"tag":120,"props":767,"children":768},{},[769],{"type":27,"tag":55,"props":770,"children":772},{"id":771},"q3-predict-the-output-for-given-input",[773],{"type":36,"value":774},"Q3 Predict the output for given input:",{"type":27,"tag":28,"props":776,"children":777},{},[778],{"type":36,"value":779},"Input: 5000",{"type":27,"tag":72,"props":781,"children":783},{"code":782},"Scanner scn = new Scanner(System.in);\nint a = scn.nextInt();\nSystem.out.print(a);\n",[784],{"type":27,"tag":77,"props":785,"children":786},{"__ignoreMap":7},[787],{"type":36,"value":782},{"type":27,"tag":138,"props":789,"children":791},{"className":790},[141],[792,800,809],{"type":27,"tag":66,"props":793,"children":795},{"className":794},[146],[796,799],{"type":27,"tag":149,"props":797,"children":798},{"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":66,"props":801,"children":803},{"className":802},[146],[804,807],{"type":27,"tag":149,"props":805,"children":806},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":808}," 5000",{"type":27,"tag":66,"props":810,"children":812},{"className":811},[146],[813,816],{"type":27,"tag":149,"props":814,"children":815},{"disabled":151,"type":152},[],{"type":36,"value":817}," Watching Netflix on the side!",{"type":27,"tag":120,"props":819,"children":820},{},[821],{"type":27,"tag":28,"props":822,"children":823},{},[824,828],{"type":27,"tag":32,"props":825,"children":826},{},[827],{"type":36,"value":193},{"type":36,"value":829}," Here we are creating a variable \"a\" and taking integer from the user.",{"type":27,"tag":116,"props":831,"children":832},{},[],{"type":27,"tag":120,"props":834,"children":835},{},[836],{"type":27,"tag":55,"props":837,"children":839},{"id":838},"q4-predict-the-output-for-given-input",[840],{"type":36,"value":841},"Q4 Predict the output for given input:",{"type":27,"tag":28,"props":843,"children":844},{},[845],{"type":36,"value":846},"Input: 24 30",{"type":27,"tag":72,"props":848,"children":850},{"code":849},"Scanner sc = new Scanner(System.in);\nint a = sc.nextInt();\nint b = sc.nextInt();\nSystem.out.print(a);\n",[851],{"type":27,"tag":77,"props":852,"children":853},{"__ignoreMap":7},[854],{"type":36,"value":849},{"type":27,"tag":138,"props":856,"children":858},{"className":857},[141],[859,868,877],{"type":27,"tag":66,"props":860,"children":862},{"className":861},[146],[863,866],{"type":27,"tag":149,"props":864,"children":865},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":867}," 24",{"type":27,"tag":66,"props":869,"children":871},{"className":870},[146],[872,875],{"type":27,"tag":149,"props":873,"children":874},{"disabled":151,"type":152},[],{"type":36,"value":876}," 30",{"type":27,"tag":66,"props":878,"children":880},{"className":879},[146],[881,884],{"type":27,"tag":149,"props":882,"children":883},{"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":120,"props":886,"children":887},{},[888],{"type":27,"tag":28,"props":889,"children":890},{},[891,895],{"type":27,"tag":32,"props":892,"children":893},{},[894],{"type":36,"value":193},{"type":36,"value":896}," The first value will be stored in first variable and second value will be stored in second variable.",{"type":27,"tag":116,"props":898,"children":899},{},[],{"type":27,"tag":120,"props":901,"children":902},{},[903],{"type":27,"tag":55,"props":904,"children":906},{"id":905},"q5-predict-the-output-for-given-input",[907],{"type":36,"value":908},"Q5 Predict the output for given input:",{"type":27,"tag":28,"props":910,"children":911},{},[912],{"type":36,"value":913},"Input: 33 11",{"type":27,"tag":72,"props":915,"children":917},{"code":916},"Scanner sc = new Scanner(System.in);\nint c = sc.nextInt();\nint d = sc.nextInt();\nSystem.out.print(c + d);\n",[918],{"type":27,"tag":77,"props":919,"children":920},{"__ignoreMap":7},[921],{"type":36,"value":916},{"type":27,"tag":138,"props":923,"children":925},{"className":924},[141],[926,935,944,953],{"type":27,"tag":66,"props":927,"children":929},{"className":928},[146],[930,933],{"type":27,"tag":149,"props":931,"children":932},{"disabled":151,"type":152},[],{"type":36,"value":934}," 3311",{"type":27,"tag":66,"props":936,"children":938},{"className":937},[146],[939,942],{"type":27,"tag":149,"props":940,"children":941},{"disabled":151,"type":152},[],{"type":36,"value":943}," c + d",{"type":27,"tag":66,"props":945,"children":947},{"className":946},[146],[948,951],{"type":27,"tag":149,"props":949,"children":950},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":952}," 44",{"type":27,"tag":66,"props":954,"children":956},{"className":955},[146],[957,960],{"type":27,"tag":149,"props":958,"children":959},{"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":120,"props":962,"children":963},{},[964],{"type":27,"tag":28,"props":965,"children":966},{},[967,971],{"type":27,"tag":32,"props":968,"children":969},{},[970],{"type":36,"value":193},{"type":36,"value":972}," \"c\" variable will have value 33, and \"d\" variablle will have value 11.",{"type":27,"tag":116,"props":974,"children":975},{},[],{"type":27,"tag":120,"props":977,"children":978},{},[979],{"type":27,"tag":55,"props":980,"children":982},{"id":981},"q6-what-will-be-the-output-for-the-following-input",[983],{"type":36,"value":984},"Q6 What will be the output for the following input?",{"type":27,"tag":72,"props":986,"children":988},{"code":987},"Input: 15 21\nScanner sc = new Scanner(System.in); \nint a = sc.nextInt(); \nint b = sc.nextInt(); \nint c = sc.nextInt();\nSystem.out.print(a + b + c);\n",[989],{"type":27,"tag":77,"props":990,"children":991},{"__ignoreMap":7},[992],{"type":36,"value":987},{"type":27,"tag":138,"props":994,"children":996},{"className":995},[141],[997,1006,1015,1024],{"type":27,"tag":66,"props":998,"children":1000},{"className":999},[146],[1001,1004],{"type":27,"tag":149,"props":1002,"children":1003},{"disabled":151,"type":152},[],{"type":36,"value":1005}," 36",{"type":27,"tag":66,"props":1007,"children":1009},{"className":1008},[146],[1010,1013],{"type":27,"tag":149,"props":1011,"children":1012},{"disabled":151,"type":152},[],{"type":36,"value":1014}," a + b + c",{"type":27,"tag":66,"props":1016,"children":1018},{"className":1017},[146],[1019,1022],{"type":27,"tag":149,"props":1020,"children":1021},{"disabled":151,"type":152},[],{"type":36,"value":1023}," 36c",{"type":27,"tag":66,"props":1025,"children":1027},{"className":1026},[146],[1028,1031],{"type":27,"tag":149,"props":1029,"children":1030},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":120,"props":1033,"children":1034},{},[1035],{"type":27,"tag":28,"props":1036,"children":1037},{},[1038,1042],{"type":27,"tag":32,"props":1039,"children":1040},{},[1041],{"type":36,"value":193},{"type":36,"value":1043}," \"a\" variable will have value 15, then variable \"b\" will have value 21, but for \"c\" variable user is not giving any input.",{"type":27,"tag":28,"props":1045,"children":1046},{},[1047],{"type":27,"tag":77,"props":1048,"children":1050},{"className":1049},[],[1051],{"type":36,"value":1052},"Error, No such element exception.",{"type":27,"tag":116,"props":1054,"children":1055},{},[],{"type":27,"tag":55,"props":1057,"children":1059},{"id":1058},"input-for-long-data-type",[1060],{"type":36,"value":1061},"Input for long data type:",{"type":27,"tag":72,"props":1063,"children":1065},{"code":1064},"Scanner scn = new Scanner(System .in);\nlong c = scn.nextLong();\n",[1066],{"type":27,"tag":77,"props":1067,"children":1068},{"__ignoreMap":7},[1069],{"type":36,"value":1064},{"type":27,"tag":120,"props":1071,"children":1072},{},[1073],{"type":27,"tag":55,"props":1074,"children":1076},{"id":1075},"q1-how-to-take-input-for-a-long-variable",[1077],{"type":36,"value":1078},"Q1 How to take input for a long variable?",{"type":27,"tag":138,"props":1080,"children":1082},{"className":1081},[141],[1083,1092,1101,1110],{"type":27,"tag":66,"props":1084,"children":1086},{"className":1085},[146],[1087,1090],{"type":27,"tag":149,"props":1088,"children":1089},{"disabled":151,"type":152},[],{"type":36,"value":1091}," sc.nextlong()",{"type":27,"tag":66,"props":1093,"children":1095},{"className":1094},[146],[1096,1099],{"type":27,"tag":149,"props":1097,"children":1098},{"disabled":151,"type":152},[],{"type":36,"value":1100}," sc.nextint()",{"type":27,"tag":66,"props":1102,"children":1104},{"className":1103},[146],[1105,1108],{"type":27,"tag":149,"props":1106,"children":1107},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":1109}," sc.nextLong()",{"type":27,"tag":66,"props":1111,"children":1113},{"className":1112},[146],[1114,1117],{"type":27,"tag":149,"props":1115,"children":1116},{"disabled":151,"type":152},[],{"type":36,"value":1118}," sc.nextInt()",{"type":27,"tag":116,"props":1120,"children":1121},{},[],{"type":27,"tag":120,"props":1123,"children":1124},{},[1125],{"type":27,"tag":55,"props":1126,"children":1128},{"id":1127},"q2-predict-the-output-for-the-following-input",[1129],{"type":36,"value":1130},"Q2 Predict the output for the following input:",{"type":27,"tag":28,"props":1132,"children":1133},{},[1134],{"type":36,"value":1135},"Input: 10000000000",{"type":27,"tag":72,"props":1137,"children":1139},{"code":1138},"Scanner scn = new Scanner(System.in);\nlong N = scn.nextLong();\nSystem.out.println(N);\n",[1140],{"type":27,"tag":77,"props":1141,"children":1142},{"__ignoreMap":7},[1143],{"type":36,"value":1138},{"type":27,"tag":138,"props":1145,"children":1147},{"className":1146},[141],[1148,1156,1164],{"type":27,"tag":66,"props":1149,"children":1151},{"className":1150},[146],[1152,1155],{"type":27,"tag":149,"props":1153,"children":1154},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":455},{"type":27,"tag":66,"props":1157,"children":1159},{"className":1158},[146],[1160,1163],{"type":27,"tag":149,"props":1161,"children":1162},{"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":66,"props":1165,"children":1167},{"className":1166},[146],[1168,1171],{"type":27,"tag":149,"props":1169,"children":1170},{"disabled":151,"type":152},[],{"type":36,"value":1172}," 10000000000L",{"type":27,"tag":116,"props":1174,"children":1175},{},[],{"type":27,"tag":120,"props":1177,"children":1178},{},[1179],{"type":27,"tag":55,"props":1180,"children":1182},{"id":1181},"q3-predict-the-output-for-the-following-input",[1183],{"type":36,"value":1184},"Q3 Predict the output for the following input:",{"type":27,"tag":28,"props":1186,"children":1187},{},[1188],{"type":36,"value":1189},"Input: 10000000000L",{"type":27,"tag":72,"props":1191,"children":1193},{"code":1192},"Scanner scn = new Scanner(System.in):\nlong N = scn.nextLong();\nSystem.out.println(N);\n",[1194],{"type":27,"tag":77,"props":1195,"children":1196},{"__ignoreMap":7},[1197],{"type":36,"value":1192},{"type":27,"tag":138,"props":1199,"children":1201},{"className":1200},[141],[1202,1210,1218],{"type":27,"tag":66,"props":1203,"children":1205},{"className":1204},[146],[1206,1209],{"type":27,"tag":149,"props":1207,"children":1208},{"disabled":151,"type":152},[],{"type":36,"value":455},{"type":27,"tag":66,"props":1211,"children":1213},{"className":1212},[146],[1214,1217],{"type":27,"tag":149,"props":1215,"children":1216},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":66,"props":1219,"children":1221},{"className":1220},[146],[1222,1225],{"type":27,"tag":149,"props":1223,"children":1224},{"disabled":151,"type":152},[],{"type":36,"value":1172},{"type":27,"tag":120,"props":1227,"children":1228},{},[1229],{"type":27,"tag":28,"props":1230,"children":1231},{},[1232,1236,1238],{"type":27,"tag":32,"props":1233,"children":1234},{},[1235],{"type":36,"value":193},{"type":36,"value":1237}," Here, when we give L in the input, then the whole input is not a number anymore.\n",{"type":27,"tag":77,"props":1239,"children":1241},{"className":1240},[],[1242],{"type":36,"value":1243},"Error, Input Mismatch. Do not write L in the input section to give a long value.  ",{"type":27,"tag":116,"props":1245,"children":1246},{},[],{"type":27,"tag":120,"props":1248,"children":1249},{},[1250],{"type":27,"tag":55,"props":1251,"children":1253},{"id":1252},"q4-3-predict-the-output-for-the-following-input",[1254],{"type":36,"value":1255},"Q4 3 Predict the output for the following input",{"type":27,"tag":72,"props":1257,"children":1259},{"code":1258},"Input: 2500\nlong x = scn.nextInt();\nSystem.out.print(x);\n",[1260],{"type":27,"tag":77,"props":1261,"children":1262},{"__ignoreMap":7},[1263],{"type":36,"value":1258},{"type":27,"tag":138,"props":1265,"children":1267},{"className":1266},[141],[1268,1277,1285],{"type":27,"tag":66,"props":1269,"children":1271},{"className":1270},[146],[1272,1275],{"type":27,"tag":149,"props":1273,"children":1274},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":1276}," 2500",{"type":27,"tag":66,"props":1278,"children":1280},{"className":1279},[146],[1281,1284],{"type":27,"tag":149,"props":1282,"children":1283},{"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":66,"props":1286,"children":1288},{"className":1287},[146],[1289,1292],{"type":27,"tag":149,"props":1290,"children":1291},{"disabled":151,"type":152},[],{"type":36,"value":1293}," 2500L",{"type":27,"tag":120,"props":1295,"children":1296},{},[1297],{"type":27,"tag":28,"props":1298,"children":1299},{},[1300,1304],{"type":27,"tag":32,"props":1301,"children":1302},{},[1303],{"type":36,"value":193},{"type":36,"value":1305}," First 2500 is considered an integer value, ans we can store an integer value into long. It is implicit typecasting.",{"type":27,"tag":116,"props":1307,"children":1308},{},[],{"type":27,"tag":120,"props":1310,"children":1311},{},[1312],{"type":27,"tag":55,"props":1313,"children":1315},{"id":1314},"q5-predict-the-output-for-the-following-input",[1316],{"type":36,"value":1317},"Q5 Predict the output for the following input",{"type":27,"tag":72,"props":1319,"children":1321},{"code":1320},"Input: 2500\nint x = scn.nextLong();\nSystem.out.print(x);\n",[1322],{"type":27,"tag":77,"props":1323,"children":1324},{"__ignoreMap":7},[1325],{"type":36,"value":1320},{"type":27,"tag":138,"props":1327,"children":1329},{"className":1328},[141],[1330,1338,1346],{"type":27,"tag":66,"props":1331,"children":1333},{"className":1332},[146],[1334,1337],{"type":27,"tag":149,"props":1335,"children":1336},{"disabled":151,"type":152},[],{"type":36,"value":1276},{"type":27,"tag":66,"props":1339,"children":1341},{"className":1340},[146],[1342,1345],{"type":27,"tag":149,"props":1343,"children":1344},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":66,"props":1347,"children":1349},{"className":1348},[146],[1350,1353],{"type":27,"tag":149,"props":1351,"children":1352},{"disabled":151,"type":152},[],{"type":36,"value":1293},{"type":27,"tag":120,"props":1355,"children":1356},{},[1357],{"type":27,"tag":28,"props":1358,"children":1359},{},[1360,1364,1366],{"type":27,"tag":32,"props":1361,"children":1362},{},[1363],{"type":36,"value":193},{"type":36,"value":1365}," Now here from long to int, it cannot happen automatically.\n",{"type":27,"tag":77,"props":1367,"children":1369},{"className":1368},[],[1370],{"type":36,"value":1371},"Error, possible lossy conversion from long to int.",{"type":27,"tag":116,"props":1373,"children":1374},{},[],{"type":27,"tag":120,"props":1376,"children":1377},{},[1378],{"type":27,"tag":55,"props":1379,"children":1381},{"id":1380},"q6-predict-the-output-for-the-following-input",[1382],{"type":36,"value":1383},"Q6 Predict the output for the following input",{"type":27,"tag":72,"props":1385,"children":1387},{"code":1386},"Input: 2500\nint x = (int)scn.nextLong();\nSystem.out.print(x);\n",[1388],{"type":27,"tag":77,"props":1389,"children":1390},{"__ignoreMap":7},[1391],{"type":36,"value":1386},{"type":27,"tag":138,"props":1393,"children":1395},{"className":1394},[141],[1396,1404,1412],{"type":27,"tag":66,"props":1397,"children":1399},{"className":1398},[146],[1400,1403],{"type":27,"tag":149,"props":1401,"children":1402},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":1276},{"type":27,"tag":66,"props":1405,"children":1407},{"className":1406},[146],[1408,1411],{"type":27,"tag":149,"props":1409,"children":1410},{"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":66,"props":1413,"children":1415},{"className":1414},[146],[1416,1419],{"type":27,"tag":149,"props":1417,"children":1418},{"disabled":151,"type":152},[],{"type":36,"value":1293},{"type":27,"tag":116,"props":1421,"children":1422},{},[],{"type":27,"tag":55,"props":1424,"children":1426},{"id":1425},"float-vs-double",[1427],{"type":36,"value":1428},"Float vs Double",{"type":27,"tag":62,"props":1430,"children":1431},{},[1432,1437],{"type":27,"tag":66,"props":1433,"children":1434},{},[1435],{"type":36,"value":1436},"Non Decimal{Integers} --> Datatypes : int  long",{"type":27,"tag":66,"props":1438,"children":1439},{},[1440],{"type":36,"value":1441},"Decimal --> float  double\nEx : 1.24 , 1.56 , 20.0,and soon...",{"type":27,"tag":28,"props":1443,"children":1444},{},[1445],{"type":27,"tag":32,"props":1446,"children":1447},{},[1448],{"type":36,"value":1449},"Declare a variable of any Type\nSyntax: type name = value;",{"type":27,"tag":120,"props":1451,"children":1452},{},[1453],{"type":27,"tag":55,"props":1454,"children":1456},{"id":1455},"q1-predict-the-output-for-the-following-input",[1457],{"type":36,"value":1458},"Q1 Predict the output for the following input",{"type":27,"tag":72,"props":1460,"children":1462},{"code":1461},"double d = 6.17;\nSystem.out.print(d);\n",[1463],{"type":27,"tag":77,"props":1464,"children":1465},{"__ignoreMap":7},[1466],{"type":36,"value":1461},{"type":27,"tag":138,"props":1468,"children":1470},{"className":1469},[141],[1471,1479,1488,1497],{"type":27,"tag":66,"props":1472,"children":1474},{"className":1473},[146],[1475,1478],{"type":27,"tag":149,"props":1476,"children":1477},{"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":1480,"children":1482},{"className":1481},[146],[1483,1486],{"type":27,"tag":149,"props":1484,"children":1485},{"disabled":151,"type":152},[],{"type":36,"value":1487}," 6",{"type":27,"tag":66,"props":1489,"children":1491},{"className":1490},[146],[1492,1495],{"type":27,"tag":149,"props":1493,"children":1494},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":1496}," 6.17",{"type":27,"tag":66,"props":1498,"children":1500},{"className":1499},[146],[1501,1504],{"type":27,"tag":149,"props":1502,"children":1503},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":1506,"children":1507},{},[1508],{"type":27,"tag":28,"props":1509,"children":1510},{},[1511,1515],{"type":27,"tag":32,"props":1512,"children":1513},{},[1514],{"type":36,"value":193},{"type":36,"value":1516}," We are creating a variable of type double.",{"type":27,"tag":116,"props":1518,"children":1519},{},[],{"type":27,"tag":120,"props":1521,"children":1522},{},[1523],{"type":27,"tag":55,"props":1524,"children":1526},{"id":1525},"q2-predict-the-output-for-the-following-input-1",[1527],{"type":36,"value":1528},"Q2 Predict the output for the following input",{"type":27,"tag":72,"props":1530,"children":1532},{"code":1531},"float x = 3.14;\nSystem.out.print(x);\n",[1533],{"type":27,"tag":77,"props":1534,"children":1535},{"__ignoreMap":7},[1536],{"type":36,"value":1531},{"type":27,"tag":138,"props":1538,"children":1540},{"className":1539},[141],[1541,1549,1558,1567],{"type":27,"tag":66,"props":1542,"children":1544},{"className":1543},[146],[1545,1548],{"type":27,"tag":149,"props":1546,"children":1547},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":1550,"children":1552},{"className":1551},[146],[1553,1556],{"type":27,"tag":149,"props":1554,"children":1555},{"disabled":151,"type":152},[],{"type":36,"value":1557}," 3.14f",{"type":27,"tag":66,"props":1559,"children":1561},{"className":1560},[146],[1562,1565],{"type":27,"tag":149,"props":1563,"children":1564},{"disabled":151,"type":152},[],{"type":36,"value":1566}," 3.1400001",{"type":27,"tag":66,"props":1568,"children":1570},{"className":1569},[146],[1571,1574],{"type":27,"tag":149,"props":1572,"children":1573},{"disabled":151,"type":152},[],{"type":36,"value":1575}," 3.14",{"type":27,"tag":120,"props":1577,"children":1578},{},[1579],{"type":27,"tag":28,"props":1580,"children":1581},{},[1582,1586,1588],{"type":27,"tag":32,"props":1583,"children":1584},{},[1585],{"type":36,"value":193},{"type":36,"value":1587}," ",{"type":27,"tag":77,"props":1589,"children":1591},{"className":1590},[],[1592],{"type":36,"value":1593},"Error-> Possible lossy conversion from double to float. ",{"type":27,"tag":120,"props":1595,"children":1596},{},[1597],{"type":27,"tag":28,"props":1598,"children":1599},{},[1600,1605],{"type":27,"tag":32,"props":1601,"children":1602},{},[1603],{"type":36,"value":1604},"Rule",{"type":36,"value":1606}," : In JAVA, Any decimal number is considered as double",{"type":27,"tag":116,"props":1608,"children":1609},{},[],{"type":27,"tag":120,"props":1611,"children":1612},{},[1613],{"type":27,"tag":55,"props":1614,"children":1616},{"id":1615},"q3-predict-the-output-for-the-following-input-1",[1617],{"type":36,"value":1618},"Q3 Predict the output for the following input",{"type":27,"tag":72,"props":1620,"children":1622},{"code":1621},"float a = 3.14f;\nSystem.out.print(a);\n",[1623],{"type":27,"tag":77,"props":1624,"children":1625},{"__ignoreMap":7},[1626],{"type":36,"value":1621},{"type":27,"tag":138,"props":1628,"children":1630},{"className":1629},[141],[1631,1639,1647,1655],{"type":27,"tag":66,"props":1632,"children":1634},{"className":1633},[146],[1635,1638],{"type":27,"tag":149,"props":1636,"children":1637},{"disabled":151,"type":152},[],{"type":36,"value":1566},{"type":27,"tag":66,"props":1640,"children":1642},{"className":1641},[146],[1643,1646],{"type":27,"tag":149,"props":1644,"children":1645},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":1575},{"type":27,"tag":66,"props":1648,"children":1650},{"className":1649},[146],[1651,1654],{"type":27,"tag":149,"props":1652,"children":1653},{"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":1656,"children":1658},{"className":1657},[146],[1659,1662],{"type":27,"tag":149,"props":1660,"children":1661},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":1664,"children":1665},{},[1666],{"type":27,"tag":28,"props":1667,"children":1668},{},[1669,1673],{"type":27,"tag":32,"props":1670,"children":1671},{},[1672],{"type":36,"value":193},{"type":36,"value":1674}," Now when we add \"f\" in front of it, Basically we are trying to tell compiler, consider this as float.",{"type":27,"tag":116,"props":1676,"children":1677},{},[],{"type":27,"tag":563,"props":1679,"children":1681},{"id":1680},"difference-between-float-and-double",[1682],{"type":36,"value":1683},"Difference Between Float and Double?",{"type":27,"tag":72,"props":1685,"children":1687},{"code":1686},"float a = 10.0f;\nfloat b = 3.0f;\nfloat c = (a/b); \nSystem.out.println(c);\n",[1688],{"type":27,"tag":77,"props":1689,"children":1690},{"__ignoreMap":7},[1691],{"type":36,"value":1686},{"type":27,"tag":72,"props":1693,"children":1695},{"code":1694},"double x = 10.0;\ndouble y = 3.0;\ndouble z = x/y;\nSystem.out.println(z);\n",[1696],{"type":27,"tag":77,"props":1697,"children":1698},{"__ignoreMap":7},[1699],{"type":36,"value":1694},{"type":27,"tag":28,"props":1701,"children":1702},{},[1703],{"type":27,"tag":32,"props":1704,"children":1705},{},[1706],{"type":36,"value":1707},"Output:",{"type":27,"tag":72,"props":1709,"children":1713},{"code":1710,"language":1711,"meta":7,"className":1712,"style":7},"3.3333333\n3.3333333333333335\n","plaintext","language-plaintext shiki shiki-themes vitesse-dark",[1714],{"type":27,"tag":77,"props":1715,"children":1716},{"__ignoreMap":7},[1717,1728],{"type":27,"tag":1718,"props":1719,"children":1722},"span",{"class":1720,"line":1721},"line",1,[1723],{"type":27,"tag":1718,"props":1724,"children":1725},{},[1726],{"type":36,"value":1727},"3.3333333\n",{"type":27,"tag":1718,"props":1729,"children":1730},{"class":1720,"line":83},[1731],{"type":27,"tag":1718,"props":1732,"children":1733},{},[1734],{"type":36,"value":1735},"3.3333333333333335\n",{"type":27,"tag":120,"props":1737,"children":1738},{},[1739],{"type":27,"tag":28,"props":1740,"children":1741},{},[1742],{"type":27,"tag":32,"props":1743,"children":1744},{},[1745],{"type":36,"value":193},{"type":27,"tag":138,"props":1747,"children":1748},{},[1749,1754,1759],{"type":27,"tag":66,"props":1750,"children":1751},{},[1752],{"type":36,"value":1753},"float -> can have upto 6 to 7 digits after decimal point.",{"type":27,"tag":66,"props":1755,"children":1756},{},[1757],{"type":36,"value":1758},"double -> can have upto 15 to 16 digits after decimal point.",{"type":27,"tag":66,"props":1760,"children":1761},{},[1762,1764],{"type":36,"value":1763},"double is more precise ",{"type":27,"tag":1718,"props":1765,"children":1766},{},[1767],{"type":36,"value":1768},"more digits after decimal point",{"type":27,"tag":116,"props":1770,"children":1771},{},[],{"type":27,"tag":55,"props":1773,"children":1775},{"id":1774},"type-casting-float-vs-double",[1776],{"type":36,"value":1777},"Type Casting Float vs Double",{"type":27,"tag":28,"props":1779,"children":1780},{},[1781],{"type":36,"value":1782},"Same Rules of int vs long apply here,",{"type":27,"tag":62,"props":1784,"children":1785},{},[1786,1791],{"type":27,"tag":66,"props":1787,"children":1788},{},[1789],{"type":36,"value":1790},"When we store float to double no loss of data hence no issue\n{Implicit Type Casting}.",{"type":27,"tag":66,"props":1792,"children":1793},{},[1794],{"type":36,"value":1795},"When we store double to float there can be a loss of data, complier will raise an error.",{"type":27,"tag":72,"props":1797,"children":1799},{"code":1798},"double d = 3.14\nfloat f = d // Error \n",[1800],{"type":27,"tag":77,"props":1801,"children":1802},{"__ignoreMap":7},[1803],{"type":36,"value":1798},{"type":27,"tag":62,"props":1805,"children":1806},{"start":100},[1807],{"type":27,"tag":66,"props":1808,"children":1809},{},[1810],{"type":36,"value":1811},"If we want to still force we need to keep explicitly type cast it.",{"type":27,"tag":72,"props":1813,"children":1815},{"code":1814},"double d = 3.14\nfloat f = (float)d; // doubtle --> Explicilty --> float \nSystem.out.print(f); // 3.14\n",[1816],{"type":27,"tag":77,"props":1817,"children":1818},{"__ignoreMap":7},[1819],{"type":36,"value":1814},{"type":27,"tag":116,"props":1821,"children":1822},{},[],{"type":27,"tag":120,"props":1824,"children":1825},{},[1826],{"type":27,"tag":55,"props":1827,"children":1829},{"id":1828},"q1-predict-the-output-for-the-following-input-1",[1830],{"type":36,"value":1458},{"type":27,"tag":72,"props":1832,"children":1834},{"code":1833},"double x = 3.14;\nfloat y = x;\nSystem.out.print(y);\n",[1835],{"type":27,"tag":77,"props":1836,"children":1837},{"__ignoreMap":7},[1838],{"type":36,"value":1833},{"type":27,"tag":138,"props":1840,"children":1842},{"className":1841},[141],[1843,1851,1859,1867],{"type":27,"tag":66,"props":1844,"children":1846},{"className":1845},[146],[1847,1850],{"type":27,"tag":149,"props":1848,"children":1849},{"disabled":151,"type":152},[],{"type":36,"value":1557},{"type":27,"tag":66,"props":1852,"children":1854},{"className":1853},[146],[1855,1858],{"type":27,"tag":149,"props":1856,"children":1857},{"disabled":151,"type":152},[],{"type":36,"value":1575},{"type":27,"tag":66,"props":1860,"children":1862},{"className":1861},[146],[1863,1866],{"type":27,"tag":149,"props":1864,"children":1865},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":1868,"children":1870},{"className":1869},[146],[1871,1874],{"type":27,"tag":149,"props":1872,"children":1873},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":1876,"children":1877},{},[1878],{"type":27,"tag":28,"props":1879,"children":1880},{},[1881,1885,1887],{"type":27,"tag":32,"props":1882,"children":1883},{},[1884],{"type":36,"value":193},{"type":36,"value":1886}," Here we are trying to store a double type value into float.\n",{"type":27,"tag":77,"props":1888,"children":1890},{"className":1889},[],[1891],{"type":36,"value":1892},"Error- Possible lossy conversion from double to float. ",{"type":27,"tag":116,"props":1894,"children":1895},{},[],{"type":27,"tag":120,"props":1897,"children":1898},{},[1899],{"type":27,"tag":55,"props":1900,"children":1902},{"id":1901},"q2-predict-the-output-for-the-following-input-2",[1903],{"type":36,"value":1528},{"type":27,"tag":72,"props":1905,"children":1907},{"code":1906},"double x = 17.67;\nfloat y = (float)x;\nSystem.out.print(y);\n",[1908],{"type":27,"tag":77,"props":1909,"children":1910},{"__ignoreMap":7},[1911],{"type":36,"value":1906},{"type":27,"tag":138,"props":1913,"children":1915},{"className":1914},[141],[1916,1925,1934,1942],{"type":27,"tag":66,"props":1917,"children":1919},{"className":1918},[146],[1920,1923],{"type":27,"tag":149,"props":1921,"children":1922},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":1924}," 17.67",{"type":27,"tag":66,"props":1926,"children":1928},{"className":1927},[146],[1929,1932],{"type":27,"tag":149,"props":1930,"children":1931},{"disabled":151,"type":152},[],{"type":36,"value":1933}," 17.669999999999998",{"type":27,"tag":66,"props":1935,"children":1937},{"className":1936},[146],[1938,1941],{"type":27,"tag":149,"props":1939,"children":1940},{"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":1943,"children":1945},{"className":1944},[146],[1946,1949],{"type":27,"tag":149,"props":1947,"children":1948},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":1951,"children":1952},{},[1953],{"type":27,"tag":28,"props":1954,"children":1955},{},[1956,1960],{"type":27,"tag":32,"props":1957,"children":1958},{},[1959],{"type":36,"value":193},{"type":36,"value":1961}," In this case, we are forcing the compiler to convert double to float.  This is known as Explicit Typecasting.",{"type":27,"tag":28,"props":1963,"children":1964},{},[1965],{"type":27,"tag":32,"props":1966,"children":1967},{},[1968],{"type":36,"value":1969},"No data loss -> No error",{"type":27,"tag":138,"props":1971,"children":1972},{},[1973,1978],{"type":27,"tag":66,"props":1974,"children":1975},{},[1976],{"type":36,"value":1977},"int (45)  ->  double   -> No error",{"type":27,"tag":66,"props":1979,"children":1980},{},[1981],{"type":36,"value":1982},"double (45.6)  -> int  -> Error",{"type":27,"tag":116,"props":1984,"children":1985},{},[],{"type":27,"tag":55,"props":1987,"children":1989},{"id":1988},"type-casting-decimal-vs-non-decimal",[1990],{"type":36,"value":1991},"Type Casting Decimal vs Non Decimal",{"type":27,"tag":28,"props":1993,"children":1994},{},[1995],{"type":36,"value":1996},"For typecasting just remember 2 rules:",{"type":27,"tag":62,"props":1998,"children":1999},{},[2000,2005],{"type":27,"tag":66,"props":2001,"children":2002},{},[2003],{"type":36,"value":2004},"If there is is no loss of data then no error : Implicit from non-decimal to decimal  : Implicit.",{"type":27,"tag":66,"props":2006,"children":2007},{},[2008],{"type":36,"value":2009},"If there is chance for loss of data then error but We can still do this type casting forcefully : Explicit from decimal to non - decimal : Explicilty.",{"type":27,"tag":120,"props":2011,"children":2012},{},[2013],{"type":27,"tag":55,"props":2014,"children":2016},{"id":2015},"q1-predict-the-output-for-the-following-input-2",[2017],{"type":36,"value":1458},{"type":27,"tag":72,"props":2019,"children":2021},{"code":2020},"double x = 3.45;\nint y = x;\nSystem.out.print(y);\n",[2022],{"type":27,"tag":77,"props":2023,"children":2024},{"__ignoreMap":7},[2025],{"type":36,"value":2020},{"type":27,"tag":138,"props":2027,"children":2029},{"className":2028},[141],[2030,2039,2048,2056],{"type":27,"tag":66,"props":2031,"children":2033},{"className":2032},[146],[2034,2037],{"type":27,"tag":149,"props":2035,"children":2036},{"disabled":151,"type":152},[],{"type":36,"value":2038}," 3",{"type":27,"tag":66,"props":2040,"children":2042},{"className":2041},[146],[2043,2046],{"type":27,"tag":149,"props":2044,"children":2045},{"disabled":151,"type":152},[],{"type":36,"value":2047}," 3.45",{"type":27,"tag":66,"props":2049,"children":2051},{"className":2050},[146],[2052,2055],{"type":27,"tag":149,"props":2053,"children":2054},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":2057,"children":2059},{"className":2058},[146],[2060,2063],{"type":27,"tag":149,"props":2061,"children":2062},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":28,"props":2065,"children":2066},{},[2067],{"type":27,"tag":32,"props":2068,"children":2069},{},[2070],{"type":36,"value":1707},{"type":27,"tag":72,"props":2072,"children":2074},{"code":2073},"Error- Possible lossy conversion from double to int. \n",[2075],{"type":27,"tag":77,"props":2076,"children":2077},{"__ignoreMap":7},[2078],{"type":36,"value":2073},{"type":27,"tag":116,"props":2080,"children":2081},{},[],{"type":27,"tag":120,"props":2083,"children":2084},{},[2085],{"type":27,"tag":55,"props":2086,"children":2088},{"id":2087},"q2-predict-the-output-for-the-following-input-3",[2089],{"type":36,"value":1528},{"type":27,"tag":72,"props":2091,"children":2093},{"code":2092},"double x = 3.45;\nint y = (int)x;\nSystem.out.print(y);\n",[2094],{"type":27,"tag":77,"props":2095,"children":2096},{"__ignoreMap":7},[2097],{"type":36,"value":2092},{"type":27,"tag":138,"props":2099,"children":2101},{"className":2100},[141],[2102,2110,2118,2126],{"type":27,"tag":66,"props":2103,"children":2105},{"className":2104},[146],[2106,2109],{"type":27,"tag":149,"props":2107,"children":2108},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":2038},{"type":27,"tag":66,"props":2111,"children":2113},{"className":2112},[146],[2114,2117],{"type":27,"tag":149,"props":2115,"children":2116},{"disabled":151,"type":152},[],{"type":36,"value":2047},{"type":27,"tag":66,"props":2119,"children":2121},{"className":2120},[146],[2122,2125],{"type":27,"tag":149,"props":2123,"children":2124},{"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":2127,"children":2129},{"className":2128},[146],[2130,2133],{"type":27,"tag":149,"props":2131,"children":2132},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":2135,"children":2136},{},[2137],{"type":27,"tag":28,"props":2138,"children":2139},{},[2140,2144],{"type":27,"tag":32,"props":2141,"children":2142},{},[2143],{"type":36,"value":193},{"type":36,"value":2145}," Here we are forcing the compiler to convert 3.14 to int, We will only get the integer part.",{"type":27,"tag":116,"props":2147,"children":2148},{},[],{"type":27,"tag":120,"props":2150,"children":2151},{},[2152],{"type":27,"tag":55,"props":2153,"children":2155},{"id":2154},"q3-predict-the-output-for-the-following-input-2",[2156],{"type":36,"value":1618},{"type":27,"tag":72,"props":2158,"children":2160},{"code":2159},"int x = 40;\ndouble y = x;\nSystem.out.print(y);\n",[2161],{"type":27,"tag":77,"props":2162,"children":2163},{"__ignoreMap":7},[2164],{"type":36,"value":2159},{"type":27,"tag":138,"props":2166,"children":2168},{"className":2167},[141],[2169,2178,2187,2195],{"type":27,"tag":66,"props":2170,"children":2172},{"className":2171},[146],[2173,2176],{"type":27,"tag":149,"props":2174,"children":2175},{"disabled":151,"type":152},[],{"type":36,"value":2177}," 40",{"type":27,"tag":66,"props":2179,"children":2181},{"className":2180},[146],[2182,2185],{"type":27,"tag":149,"props":2183,"children":2184},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":2186}," 40.0",{"type":27,"tag":66,"props":2188,"children":2190},{"className":2189},[146],[2191,2194],{"type":27,"tag":149,"props":2192,"children":2193},{"disabled":151,"type":152},[],{"type":36,"value":164},{"type":27,"tag":66,"props":2196,"children":2198},{"className":2197},[146],[2199,2202],{"type":27,"tag":149,"props":2200,"children":2201},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":2204,"children":2205},{},[2206],{"type":27,"tag":28,"props":2207,"children":2208},{},[2209,2213],{"type":27,"tag":32,"props":2210,"children":2211},{},[2212],{"type":36,"value":193},{"type":36,"value":2214}," In this example, we are trying to store a int type value into double. Double stores decimal values, and here we can easily convert 40 to 40.0, therefore it is called Implicit Typecasting.",{"type":27,"tag":116,"props":2216,"children":2217},{},[],{"type":27,"tag":55,"props":2219,"children":2221},{"id":2220},"reading-inputs-for-float-and-double",[2222],{"type":36,"value":2223},"Reading Inputs for Float and Double",{"type":27,"tag":120,"props":2225,"children":2226},{},[2227],{"type":27,"tag":28,"props":2228,"children":2229},{},[2230],{"type":36,"value":2231},"How to take input for a float variable?",{"type":27,"tag":72,"props":2233,"children":2235},{"code":2234},"Scanner scn = new Scanner(System.in);\nfloat a = scn.nextFloat();\n",[2236],{"type":27,"tag":77,"props":2237,"children":2238},{"__ignoreMap":7},[2239],{"type":36,"value":2234},{"type":27,"tag":120,"props":2241,"children":2242},{},[2243],{"type":27,"tag":28,"props":2244,"children":2245},{},[2246],{"type":36,"value":2247},"How to take input for a double variable?",{"type":27,"tag":72,"props":2249,"children":2251},{"code":2250},"Scanner scn = new Scanner(System.in);\ndouble a = scn.nextDouble();\n",[2252],{"type":27,"tag":77,"props":2253,"children":2254},{"__ignoreMap":7},[2255],{"type":36,"value":2250},{"type":27,"tag":120,"props":2257,"children":2258},{},[2259],{"type":27,"tag":55,"props":2260,"children":2262},{"id":2261},"q1-predict-the-output-for-the-following-input-3",[2263],{"type":36,"value":1458},{"type":27,"tag":72,"props":2265,"children":2267},{"code":2266},"float x = sc.nextFloat();\nSystem.out.println(x);\n",[2268],{"type":27,"tag":77,"props":2269,"children":2270},{"__ignoreMap":7},[2271],{"type":36,"value":2266},{"type":27,"tag":120,"props":2273,"children":2274},{},[2275],{"type":27,"tag":28,"props":2276,"children":2277},{},[2278],{"type":36,"value":2279},"Explain we don't need to write \"f\" while taking inputs for float.",{"type":27,"tag":116,"props":2281,"children":2282},{},[],{"type":27,"tag":120,"props":2284,"children":2285},{},[2286],{"type":27,"tag":55,"props":2287,"children":2289},{"id":2288},"q2-predict-the-output-for-the-following-input-4",[2290],{"type":36,"value":1528},{"type":27,"tag":72,"props":2292,"children":2294},{"code":2293},"Input : 3.14\n \nScanner sc = new Scanner(System.in); \nfloat a = sc.nextFloat(); \nSystem.out.print(2 * a);\n",[2295],{"type":27,"tag":77,"props":2296,"children":2297},{"__ignoreMap":7},[2298],{"type":36,"value":2293},{"type":27,"tag":138,"props":2300,"children":2302},{"className":2301},[141],[2303,2312,2320,2329],{"type":27,"tag":66,"props":2304,"children":2306},{"className":2305},[146],[2307,2310],{"type":27,"tag":149,"props":2308,"children":2309},{"disabled":151,"type":152},[],{"type":36,"value":2311}," 2.0",{"type":27,"tag":66,"props":2313,"children":2315},{"className":2314},[146],[2316,2319],{"type":27,"tag":149,"props":2317,"children":2318},{"disabled":151,"type":152},[],{"type":36,"value":1575},{"type":27,"tag":66,"props":2321,"children":2323},{"className":2322},[146],[2324,2327],{"type":27,"tag":149,"props":2325,"children":2326},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":2328}," 6.28",{"type":27,"tag":66,"props":2330,"children":2332},{"className":2331},[146],[2333,2336],{"type":27,"tag":149,"props":2334,"children":2335},{"disabled":151,"type":152},[],{"type":36,"value":2337}," 1.57",{"type":27,"tag":120,"props":2339,"children":2340},{},[2341],{"type":27,"tag":28,"props":2342,"children":2343},{},[2344,2348,2350,2356],{"type":27,"tag":32,"props":2345,"children":2346},{},[2347],{"type":36,"value":193},{"type":36,"value":2349}," Now this 3.14 is stored on variable \"a\", Then we are trying to print 2",{"type":27,"tag":2351,"props":2352,"children":2353},"em",{},[2354],{"type":36,"value":2355},"a-> 2",{"type":36,"value":2357}," 3.14.",{"type":27,"tag":116,"props":2359,"children":2360},{},[],{"type":27,"tag":120,"props":2362,"children":2363},{},[2364],{"type":27,"tag":55,"props":2365,"children":2367},{"id":2366},"q3-predict-the-output-for-the-following-input-3",[2368],{"type":36,"value":1618},{"type":27,"tag":72,"props":2370,"children":2372},{"code":2371},"Input : 3.14 20\n \nScanner sc = new Scanner(System.in); \nint a = sc.nextInt(); \nint b = sc.nextInt();\nSystem.out.print(a + b);\n",[2373],{"type":27,"tag":77,"props":2374,"children":2375},{"__ignoreMap":7},[2376],{"type":36,"value":2371},{"type":27,"tag":138,"props":2378,"children":2380},{"className":2379},[141],[2381,2390,2398,2407],{"type":27,"tag":66,"props":2382,"children":2384},{"className":2383},[146],[2385,2388],{"type":27,"tag":149,"props":2386,"children":2387},{"disabled":151,"type":152},[],{"type":36,"value":2389}," 17",{"type":27,"tag":66,"props":2391,"children":2393},{"className":2392},[146],[2394,2397],{"type":27,"tag":149,"props":2395,"children":2396},{"disabled":151,"type":152},[],{"type":36,"value":2038},{"type":27,"tag":66,"props":2399,"children":2401},{"className":2400},[146],[2402,2405],{"type":27,"tag":149,"props":2403,"children":2404},{"disabled":151,"type":152},[],{"type":36,"value":2406}," 14",{"type":27,"tag":66,"props":2408,"children":2410},{"className":2409},[146],[2411,2414],{"type":27,"tag":149,"props":2412,"children":2413},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":120,"props":2416,"children":2417},{},[2418],{"type":27,"tag":28,"props":2419,"children":2420},{},[2421,2425,2427],{"type":27,"tag":32,"props":2422,"children":2423},{},[2424],{"type":36,"value":193},{"type":36,"value":2426}," In the first line, we are trying to take an integer type input, But the user is not giving an integer value for the first time.\n",{"type":27,"tag":77,"props":2428,"children":2430},{"className":2429},[],[2431],{"type":36,"value":2432},"Error-> Input mismatch.",{"type":27,"tag":116,"props":2434,"children":2435},{},[],{"type":27,"tag":120,"props":2437,"children":2438},{},[2439],{"type":27,"tag":55,"props":2440,"children":2442},{"id":2441},"q1-predict-the-output-for-the-following-input-4",[2443],{"type":36,"value":1458},{"type":27,"tag":72,"props":2445,"children":2447},{"code":2446},"Input : 3.14\n \nScanner sc = new Scanner(System.in); \nfloat a = sc.nextFloat(); \nfloat b = sc.nextFloat()\nSystem.out.print(2 * a);\n",[2448],{"type":27,"tag":77,"props":2449,"children":2450},{"__ignoreMap":7},[2451],{"type":36,"value":2446},{"type":27,"tag":138,"props":2453,"children":2455},{"className":2454},[141],[2456,2464,2472,2480],{"type":27,"tag":66,"props":2457,"children":2459},{"className":2458},[146],[2460,2463],{"type":27,"tag":149,"props":2461,"children":2462},{"disabled":151,"type":152},[],{"type":36,"value":2328},{"type":27,"tag":66,"props":2465,"children":2467},{"className":2466},[146],[2468,2471],{"type":27,"tag":149,"props":2469,"children":2470},{"disabled":151,"type":152},[],{"type":36,"value":1575},{"type":27,"tag":66,"props":2473,"children":2475},{"className":2474},[146],[2476,2479],{"type":27,"tag":149,"props":2477,"children":2478},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":66,"props":2481,"children":2483},{"className":2482},[146],[2484,2487],{"type":27,"tag":149,"props":2485,"children":2486},{"disabled":151,"type":152},[],{"type":36,"value":252},{"type":27,"tag":120,"props":2489,"children":2490},{},[2491],{"type":27,"tag":28,"props":2492,"children":2493},{},[2494,2498],{"type":27,"tag":32,"props":2495,"children":2496},{},[2497],{"type":36,"value":193},{"type":36,"value":2499},"  There are 2 errors, We are only giving one input.",{"type":27,"tag":28,"props":2501,"children":2502},{},[2503],{"type":27,"tag":77,"props":2504,"children":2506},{"className":2505},[],[2507],{"type":36,"value":2508},"Error- No such element exeception. & semicolon is missing at float b = sc.nextFloat()",{"type":27,"tag":116,"props":2510,"children":2511},{},[],{"type":27,"tag":120,"props":2513,"children":2514},{},[2515],{"type":27,"tag":55,"props":2516,"children":2518},{"id":2517},"q1-predict-the-output-for-the-following-input-5",[2519],{"type":36,"value":1458},{"type":27,"tag":72,"props":2521,"children":2523},{"code":2522},"Input: 3.45\nint x = sc.nextDouble();\nSystem.out.println(x);\n",[2524],{"type":27,"tag":77,"props":2525,"children":2526},{"__ignoreMap":7},[2527],{"type":36,"value":2522},{"type":27,"tag":120,"props":2529,"children":2530},{},[2531],{"type":27,"tag":28,"props":2532,"children":2533},{},[2534,2539,2541],{"type":27,"tag":32,"props":2535,"children":2536},{},[2537],{"type":36,"value":2538},"Explanation",{"type":36,"value":2540},": According to rules of typecasting, we cannot do it there is a chance of data loss.\n",{"type":27,"tag":77,"props":2542,"children":2544},{"className":2543},[],[2545],{"type":36,"value":2546},"Ans = Error",{"type":27,"tag":28,"props":2548,"children":2549},{},[2550],{"type":27,"tag":32,"props":2551,"children":2552},{},[2553],{"type":36,"value":2554},"Correct Code:",{"type":27,"tag":72,"props":2556,"children":2558},{"code":2557},"Input: 3.45\nint x = (int)sc.nextDouble();\nSystem.out.println(x);\n",[2559],{"type":27,"tag":77,"props":2560,"children":2561},{"__ignoreMap":7},[2562],{"type":36,"value":2557},{"type":27,"tag":120,"props":2564,"children":2565},{},[2566],{"type":27,"tag":28,"props":2567,"children":2568},{},[2569,2573,2575],{"type":27,"tag":32,"props":2570,"children":2571},{},[2572],{"type":36,"value":2538},{"type":36,"value":2574},":  In this case, we are forcing the compiler to do it, But int can only store integer value, so we will only get the integer part as output.\n",{"type":27,"tag":77,"props":2576,"children":2578},{"className":2577},[],[2579],{"type":36,"value":2580},"Ans = 3",{"type":27,"tag":120,"props":2582,"children":2583},{},[2584],{"type":27,"tag":55,"props":2585,"children":2587},{"id":2586},"q2-predict-the-output-for-the-following-input-5",[2588],{"type":36,"value":1528},{"type":27,"tag":72,"props":2590,"children":2592},{"code":2591},"Input: 3\ndouble y = sc.nextInt();\nSystem.out.println(y);\n",[2593],{"type":27,"tag":77,"props":2594,"children":2595},{"__ignoreMap":7},[2596],{"type":36,"value":2591},{"type":27,"tag":120,"props":2598,"children":2599},{},[2600],{"type":27,"tag":28,"props":2601,"children":2602},{},[2603,2607,2609],{"type":27,"tag":32,"props":2604,"children":2605},{},[2606],{"type":36,"value":2538},{"type":36,"value":2608},":  We can easily Typecast from integer to decimal.\n",{"type":27,"tag":77,"props":2610,"children":2612},{"className":2611},[],[2613],{"type":36,"value":2614},"Ans = 3.0",{"type":27,"tag":116,"props":2616,"children":2617},{},[],{"type":27,"tag":55,"props":2619,"children":2621},{"id":2620},"dividing-numbers-by-zero",[2622],{"type":36,"value":2623},"Dividing numbers by zero",{"type":27,"tag":72,"props":2625,"children":2627},{"code":2626},"System.out.println(4 / 0); \nOutput:  Error\n",[2628],{"type":27,"tag":77,"props":2629,"children":2630},{"__ignoreMap":7},[2631],{"type":36,"value":2626},{"type":27,"tag":72,"props":2633,"children":2635},{"code":2634},"System.out.println(4.0 / 0);\nOutput: Infinity\n",[2636],{"type":27,"tag":77,"props":2637,"children":2638},{"__ignoreMap":7},[2639],{"type":36,"value":2634},{"type":27,"tag":72,"props":2641,"children":2643},{"code":2642},"System.out.println(4.0f / 0); \nOutput: infinity\n",[2644],{"type":27,"tag":77,"props":2645,"children":2646},{"__ignoreMap":7},[2647],{"type":36,"value":2642},{"type":27,"tag":72,"props":2649,"children":2651},{"code":2650},"System.out.println(0 / 0); \nOutput: Error.\n",[2652],{"type":27,"tag":77,"props":2653,"children":2654},{"__ignoreMap":7},[2655],{"type":36,"value":2650},{"type":27,"tag":72,"props":2657,"children":2659},{"code":2658},"System.out.println(0.0 / 0);\nOutput: NAN[Not A Number]. \n",[2660],{"type":27,"tag":77,"props":2661,"children":2662},{"__ignoreMap":7},[2663],{"type":36,"value":2658},{"type":27,"tag":116,"props":2665,"children":2666},{},[],{"type":27,"tag":55,"props":2668,"children":2670},{"id":2669},"boolean-input",[2671],{"type":36,"value":2672},"Boolean Input",{"type":27,"tag":72,"props":2674,"children":2676},{"code":2675},"boolean x = false;\nSystem.out.println(x);\n\nOutput: false.\nboolean -> true / false only, it will work on True/False, but give answer in lowercase only. \n",[2677],{"type":27,"tag":77,"props":2678,"children":2679},{"__ignoreMap":7},[2680],{"type":36,"value":2675},{"type":27,"tag":72,"props":2682,"children":2684},{"code":2683},"Input: true\nScanner sc = new Scanner(System.in);\nboolean y = sc.nextBoolean();\nSystem.out.println(y);\n\nOutput: true\n",[2685],{"type":27,"tag":77,"props":2686,"children":2687},{"__ignoreMap":7},[2688],{"type":36,"value":2683},{"type":27,"tag":28,"props":2690,"children":2691},{},[2692],{"type":36,"value":2693},"We can take inputs like True/False/false also.",{"type":27,"tag":116,"props":2695,"children":2696},{},[],{"type":27,"tag":55,"props":2698,"children":2700},{"id":2699},"arithmetic-operators",[2701],{"type":36,"value":2702},"Arithmetic Operators",{"type":27,"tag":28,"props":2704,"children":2705},{},[2706],{"type":36,"value":2707},"+, -, *, / are very basic arithmetic operators. Confirm whether the students know about them. And directly give the below quiz.",{"type":27,"tag":120,"props":2709,"children":2710},{},[2711],{"type":27,"tag":55,"props":2712,"children":2714},{"id":2713},"q1-what-will-be-the-output",[2715],{"type":36,"value":2716},"Q1 What will be the output?",{"type":27,"tag":72,"props":2718,"children":2720},{"code":2719},"int a = 10;\nint b = 24;\nSystem.out.println(a+b);\nSystem.out.println(a-b);\nSystem.out.println(a*b);\nSystem.out.println(b/a);\n",[2721],{"type":27,"tag":77,"props":2722,"children":2723},{"__ignoreMap":7},[2724],{"type":36,"value":2719},{"type":27,"tag":2726,"props":2727,"children":2729},"h1",{"id":2728},"choices",[2730],{"type":36,"value":2731},"Choices",{"type":27,"tag":138,"props":2733,"children":2735},{"className":2734},[141],[2736,2761,2783,2803],{"type":27,"tag":66,"props":2737,"children":2739},{"className":2738},[146],[2740,2743,2745,2749,2751,2754,2756,2759],{"type":27,"tag":149,"props":2741,"children":2742},{"disabled":151,"type":152},[],{"type":36,"value":2744}," 34",{"type":27,"tag":2746,"props":2747,"children":2748},"br",{},[],{"type":36,"value":2750},"-14",{"type":27,"tag":2746,"props":2752,"children":2753},{},[],{"type":36,"value":2755},"240",{"type":27,"tag":2746,"props":2757,"children":2758},{},[],{"type":36,"value":2760},"2.4",{"type":27,"tag":66,"props":2762,"children":2764},{"className":2763},[146],[2765,2768,2769,2772,2774,2777,2778,2781],{"type":27,"tag":149,"props":2766,"children":2767},{"disabled":151,"type":152},[],{"type":36,"value":2744},{"type":27,"tag":2746,"props":2770,"children":2771},{},[],{"type":36,"value":2773},"14",{"type":27,"tag":2746,"props":2775,"children":2776},{},[],{"type":36,"value":2755},{"type":27,"tag":2746,"props":2779,"children":2780},{},[],{"type":36,"value":2782},"2",{"type":27,"tag":66,"props":2784,"children":2786},{"className":2785},[146],[2787,2790,2791,2794,2795,2798,2799,2802],{"type":27,"tag":149,"props":2788,"children":2789},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":2744},{"type":27,"tag":2746,"props":2792,"children":2793},{},[],{"type":36,"value":2750},{"type":27,"tag":2746,"props":2796,"children":2797},{},[],{"type":36,"value":2755},{"type":27,"tag":2746,"props":2800,"children":2801},{},[],{"type":36,"value":2782},{"type":27,"tag":66,"props":2804,"children":2806},{"className":2805},[146],[2807,2810],{"type":27,"tag":149,"props":2808,"children":2809},{"disabled":151,"type":152},[],{"type":36,"value":2811}," None of them",{"type":27,"tag":120,"props":2813,"children":2814},{},[2815],{"type":27,"tag":28,"props":2816,"children":2817},{},[2818,2822,2824,2827,2829,2832,2834,2837,2839,2842,2844,2847],{"type":27,"tag":32,"props":2819,"children":2820},{},[2821],{"type":36,"value":2538},{"type":36,"value":2823},":  ",{"type":27,"tag":2746,"props":2825,"children":2826},{},[],{"type":36,"value":2828}," a + b -> 10 + 24 = 34 ",{"type":27,"tag":2746,"props":2830,"children":2831},{},[],{"type":36,"value":2833}," a - b -> 10 - 24 = -14 ",{"type":27,"tag":2746,"props":2835,"children":2836},{},[],{"type":36,"value":2838}," a * b -> 10 * 24 = 240 ",{"type":27,"tag":2746,"props":2840,"children":2841},{},[],{"type":36,"value":2843}," b / a -> 24 / 10 = 2  ",{"type":27,"tag":2746,"props":2845,"children":2846},{},[],{"type":36,"value":2848},"(Because both are integers, so the result should be an integer.)",{"type":27,"tag":28,"props":2850,"children":2851},{},[2852],{"type":36,"value":2853},"One more arithmetic operator:\n% -> Modulus Operator (Gives remainder of divison of two numbers as output)",{"type":27,"tag":563,"props":2855,"children":2857},{"id":2856},"examples",[2858],{"type":36,"value":2859},"Examples",{"type":27,"tag":28,"props":2861,"children":2862},{},[2863,2865,2868,2870,2873,2875],{"type":36,"value":2864},"12 % 4 = 0 ",{"type":27,"tag":2746,"props":2866,"children":2867},{},[],{"type":36,"value":2869},"\n9 % 7 = 2 ",{"type":27,"tag":2746,"props":2871,"children":2872},{},[],{"type":36,"value":2874},"\n24 % 5 = 4 ",{"type":27,"tag":2746,"props":2876,"children":2877},{},[],{"type":27,"tag":28,"props":2879,"children":2880},{},[2881],{"type":36,"value":2882},"Now, give the following quiz.",{"type":27,"tag":116,"props":2884,"children":2885},{},[],{"type":27,"tag":120,"props":2887,"children":2888},{},[2889],{"type":27,"tag":55,"props":2890,"children":2892},{"id":2891},"q2-what-will-be-the-output",[2893],{"type":36,"value":2894},"Q2 What will be the output?",{"type":27,"tag":72,"props":2896,"children":2898},{"code":2897},"System.out.print(36 % 6);\n",[2899],{"type":27,"tag":77,"props":2900,"children":2901},{"__ignoreMap":7},[2902],{"type":36,"value":2897},{"type":27,"tag":138,"props":2904,"children":2906},{"className":2905},[141],[2907,2915,2923,2932],{"type":27,"tag":66,"props":2908,"children":2910},{"className":2909},[146],[2911,2914],{"type":27,"tag":149,"props":2912,"children":2913},{"disabled":151,"type":152},[],{"type":36,"value":2038},{"type":27,"tag":66,"props":2916,"children":2918},{"className":2917},[146],[2919,2922],{"type":27,"tag":149,"props":2920,"children":2921},{"disabled":151,"type":152},[],{"type":36,"value":1487},{"type":27,"tag":66,"props":2924,"children":2926},{"className":2925},[146],[2927,2930],{"type":27,"tag":149,"props":2928,"children":2929},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":2931}," 0",{"type":27,"tag":66,"props":2933,"children":2935},{"className":2934},[146],[2936,2939],{"type":27,"tag":149,"props":2937,"children":2938},{"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":116,"props":2941,"children":2942},{},[],{"type":27,"tag":120,"props":2944,"children":2945},{},[2946],{"type":27,"tag":55,"props":2947,"children":2949},{"id":2948},"q3-what-will-be-the-output",[2950],{"type":36,"value":2951},"Q3 What will be the output?",{"type":27,"tag":72,"props":2953,"children":2955},{"code":2954},"System.out.print(5 % 3);\n",[2956],{"type":27,"tag":77,"props":2957,"children":2958},{"__ignoreMap":7},[2959],{"type":36,"value":2954},{"type":27,"tag":138,"props":2961,"children":2963},{"className":2962},[141],[2964,2973,2982,2990],{"type":27,"tag":66,"props":2965,"children":2967},{"className":2966},[146],[2968,2971],{"type":27,"tag":149,"props":2969,"children":2970},{"disabled":151,"type":152},[],{"type":36,"value":2972}," 1",{"type":27,"tag":66,"props":2974,"children":2976},{"className":2975},[146],[2977,2980],{"type":27,"tag":149,"props":2978,"children":2979},{"checked":151,"disabled":151,"type":152},[],{"type":36,"value":2981}," 2",{"type":27,"tag":66,"props":2983,"children":2985},{"className":2984},[146],[2986,2989],{"type":27,"tag":149,"props":2987,"children":2988},{"disabled":151,"type":152},[],{"type":36,"value":2038},{"type":27,"tag":66,"props":2991,"children":2993},{"className":2992},[146],[2994,2997],{"type":27,"tag":149,"props":2995,"children":2996},{"disabled":151,"type":152},[],{"type":36,"value":656},{"type":27,"tag":28,"props":2999,"children":3000},{},[3001],{"type":36,"value":3002},"If necessary, take some more examples.",{"type":27,"tag":116,"props":3004,"children":3005},{},[],{"type":27,"tag":120,"props":3007,"children":3008},{},[3009],{"type":27,"tag":55,"props":3010,"children":3012},{"id":3011},"what-are-relational-operators",[3013],{"type":36,"value":3014},"What are Relational operators?",{"type":27,"tag":28,"props":3016,"children":3017},{},[3018,3023],{"type":27,"tag":32,"props":3019,"children":3020},{},[3021],{"type":36,"value":3022},"Ans:",{"type":36,"value":3024}," Relational operators are used to check the relations between two operands. After comparison, the relational operators return a boolean value.",{"type":27,"tag":563,"props":3026,"children":3028},{"id":3027},"syntax",[3029],{"type":36,"value":3030},"Syntax:",{"type":27,"tag":72,"props":3032,"children":3034},{"code":3033},"operand_1 relational_operator operand_2\n",[3035],{"type":27,"tag":77,"props":3036,"children":3037},{"__ignoreMap":7},[3038],{"type":36,"value":3033},{"type":27,"tag":3040,"props":3041,"children":3042},"table",{},[3043,3073],{"type":27,"tag":3044,"props":3045,"children":3046},"thead",{},[3047],{"type":27,"tag":3048,"props":3049,"children":3050},"tr",{},[3051,3058,3063,3068],{"type":27,"tag":3052,"props":3053,"children":3055},"th",{"align":3054},"center",[3056],{"type":36,"value":3057},"Relation between a and b",{"type":27,"tag":3052,"props":3059,"children":3060},{"align":3054},[3061],{"type":36,"value":3062},"Syntax",{"type":27,"tag":3052,"props":3064,"children":3065},{"align":3054},[3066],{"type":36,"value":3067},"a = 45, b = 16",{"type":27,"tag":3052,"props":3069,"children":3070},{"align":3054},[3071],{"type":36,"value":3072},"a = 5, b = 5",{"type":27,"tag":3074,"props":3075,"children":3076},"tbody",{},[3077,3101,3122,3143,3164,3185],{"type":27,"tag":3048,"props":3078,"children":3079},{},[3080,3086,3091,3096],{"type":27,"tag":3081,"props":3082,"children":3083},"td",{"align":3054},[3084],{"type":36,"value":3085},"a is greater than b",{"type":27,"tag":3081,"props":3087,"children":3088},{"align":3054},[3089],{"type":36,"value":3090},"a > b",{"type":27,"tag":3081,"props":3092,"children":3093},{"align":3054},[3094],{"type":36,"value":3095},"True",{"type":27,"tag":3081,"props":3097,"children":3098},{"align":3054},[3099],{"type":36,"value":3100},"False",{"type":27,"tag":3048,"props":3102,"children":3103},{},[3104,3109,3114,3118],{"type":27,"tag":3081,"props":3105,"children":3106},{"align":3054},[3107],{"type":36,"value":3108},"a is less than b",{"type":27,"tag":3081,"props":3110,"children":3111},{"align":3054},[3112],{"type":36,"value":3113},"a \u003C b",{"type":27,"tag":3081,"props":3115,"children":3116},{"align":3054},[3117],{"type":36,"value":3100},{"type":27,"tag":3081,"props":3119,"children":3120},{"align":3054},[3121],{"type":36,"value":3100},{"type":27,"tag":3048,"props":3123,"children":3124},{},[3125,3130,3135,3139],{"type":27,"tag":3081,"props":3126,"children":3127},{"align":3054},[3128],{"type":36,"value":3129},"a is greater than or equal to b",{"type":27,"tag":3081,"props":3131,"children":3132},{"align":3054},[3133],{"type":36,"value":3134},"a >= b",{"type":27,"tag":3081,"props":3136,"children":3137},{"align":3054},[3138],{"type":36,"value":3095},{"type":27,"tag":3081,"props":3140,"children":3141},{"align":3054},[3142],{"type":36,"value":3095},{"type":27,"tag":3048,"props":3144,"children":3145},{},[3146,3151,3156,3160],{"type":27,"tag":3081,"props":3147,"children":3148},{"align":3054},[3149],{"type":36,"value":3150},"a is less than or equal to b",{"type":27,"tag":3081,"props":3152,"children":3153},{"align":3054},[3154],{"type":36,"value":3155},"a \u003C= b",{"type":27,"tag":3081,"props":3157,"children":3158},{"align":3054},[3159],{"type":36,"value":3100},{"type":27,"tag":3081,"props":3161,"children":3162},{"align":3054},[3163],{"type":36,"value":3095},{"type":27,"tag":3048,"props":3165,"children":3166},{},[3167,3172,3177,3181],{"type":27,"tag":3081,"props":3168,"children":3169},{"align":3054},[3170],{"type":36,"value":3171},"a is equal to b",{"type":27,"tag":3081,"props":3173,"children":3174},{"align":3054},[3175],{"type":36,"value":3176},"a == b",{"type":27,"tag":3081,"props":3178,"children":3179},{"align":3054},[3180],{"type":36,"value":3100},{"type":27,"tag":3081,"props":3182,"children":3183},{"align":3054},[3184],{"type":36,"value":3095},{"type":27,"tag":3048,"props":3186,"children":3187},{},[3188,3193,3198,3202],{"type":27,"tag":3081,"props":3189,"children":3190},{"align":3054},[3191],{"type":36,"value":3192},"a is not equal to b",{"type":27,"tag":3081,"props":3194,"children":3195},{"align":3054},[3196],{"type":36,"value":3197},"a != b",{"type":27,"tag":3081,"props":3199,"children":3200},{"align":3054},[3201],{"type":36,"value":3095},{"type":27,"tag":3081,"props":3203,"children":3204},{"align":3054},[3205],{"type":36,"value":3100},{"type":27,"tag":28,"props":3207,"children":3208},{},[3209,3214],{"type":27,"tag":32,"props":3210,"children":3211},{},[3212],{"type":36,"value":3213},"Note:",{"type":36,"value":3215}," Explain the difference between assignment operator (=) and equality operator (==).",{"type":27,"tag":116,"props":3217,"children":3218},{},[],{"type":27,"tag":28,"props":3220,"children":3221},{},[3222],{"type":36,"value":3223},"Thank you so much for reading. If you found it valuable, consider subscribing for more such content every week. If you have any questions or suggestions, please email me your comments or feel free to improve it.",{"type":27,"tag":3225,"props":3226,"children":3227},"style",{},[3228],{"type":36,"value":3229},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":7,"searchDepth":83,"depth":83,"links":3231},[3232,3233,3234,3235,3236,3237,3238,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,3280,3281,3282],{"id":57,"depth":83,"text":60},{"id":125,"depth":83,"text":128},{"id":204,"depth":83,"text":207},{"id":273,"depth":83,"text":276},{"id":352,"depth":83,"text":355},{"id":431,"depth":83,"text":434},{"id":508,"depth":83,"text":511,"children":3239},[3240],{"id":565,"depth":100,"text":568},{"id":618,"depth":83,"text":621},{"id":695,"depth":83,"text":698},{"id":771,"depth":83,"text":774},{"id":838,"depth":83,"text":841},{"id":905,"depth":83,"text":908},{"id":981,"depth":83,"text":984},{"id":1058,"depth":83,"text":1061},{"id":1075,"depth":83,"text":1078},{"id":1127,"depth":83,"text":1130},{"id":1181,"depth":83,"text":1184},{"id":1252,"depth":83,"text":1255},{"id":1314,"depth":83,"text":1317},{"id":1380,"depth":83,"text":1383},{"id":1425,"depth":83,"text":1428},{"id":1455,"depth":83,"text":1458},{"id":1525,"depth":83,"text":1528},{"id":1615,"depth":83,"text":1618,"children":3258},[3259],{"id":1680,"depth":100,"text":1683},{"id":1774,"depth":83,"text":1777},{"id":1828,"depth":83,"text":1458},{"id":1901,"depth":83,"text":1528},{"id":1988,"depth":83,"text":1991},{"id":2015,"depth":83,"text":1458},{"id":2087,"depth":83,"text":1528},{"id":2154,"depth":83,"text":1618},{"id":2220,"depth":83,"text":2223},{"id":2261,"depth":83,"text":1458},{"id":2288,"depth":83,"text":1528},{"id":2366,"depth":83,"text":1618},{"id":2441,"depth":83,"text":1458},{"id":2517,"depth":83,"text":1458},{"id":2586,"depth":83,"text":1528},{"id":2620,"depth":83,"text":2623},{"id":2669,"depth":83,"text":2672},{"id":2699,"depth":83,"text":2702},{"id":2713,"depth":83,"text":2716,"children":3278},[3279],{"id":2856,"depth":100,"text":2859},{"id":2891,"depth":83,"text":2894},{"id":2948,"depth":83,"text":2951},{"id":3011,"depth":83,"text":3014,"children":3283},[3284],{"id":3027,"depth":100,"text":3030},"markdown","content:learning:2024-05-19-beginner-data-types-reading-input.md","content","learning/2024-05-19-beginner-data-types-reading-input.md","learning/2024-05-19-beginner-data-types-reading-input","md",{"loc":4},1758006234928]