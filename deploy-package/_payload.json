[{"data":1,"prerenderedAt":614},["ShallowReactive",2],{"latest-learning":3,"latest-courses":98,"latest-projects":427,"latest-articles":481},[4,32,63,82],{"_path":5,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":9,"description":10,"date":11,"eventName":12,"location":8,"slidesUrl":13,"type":14,"language":15,"topics":16,"readingTime":20,"_type":25,"_id":26,"_source":27,"_file":28,"_stem":29,"_extension":30,"sitemap":31},"/learning/2024-06-4-oops","learning",false,"","OOP in JAVA","OOP in Java stands for Object-Oriented Programming. It's a programming paradigm that revolves around the concept of \"objects,\" which can contain data, in the form of fields (attributes or properties), and code, in the form of procedures (methods or functions).","2024-06-4","Interview question's and answer's","https://github.com/AherRahul/portfolio-v1/blob/main/content/learning/2024-06-4-oops.md","Interview preparation","en",[17,18,19],"java","interview-prep","beginner-programming",{"text":21,"minutes":22,"time":23,"words":24},"10 min read",9.125,547500,1825,"markdown","content:learning:2024-06-4-oops.md","content","learning/2024-06-4-oops.md","learning/2024-06-4-oops","md",{"loc":5},{"_path":33,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":34,"description":35,"date":36,"eventName":37,"location":8,"slidesUrl":38,"type":39,"language":15,"topics":40,"readingTime":41,"_type":25,"_id":46,"_source":27,"_file":47,"_stem":48,"_extension":30,"sitemap":49},"/learning/2024-05-21-if-else","3. if-else in JAVA","The Java if statement is used to test the condition. It checks boolean condition: true or false. There are various types of if statement in Java.","2024-05-21","MODULE 1: Introduction to Programming","https://github.com/AherRahul/portfolio-v1/blob/main/content/learning/2024-05-21-if-else.md","lecture-notes",[17,19],{"text":42,"minutes":43,"time":44,"words":45},"16 min read",15.725,943500,3145,"content:learning:2024-05-21-if-else.md","learning/2024-05-21-if-else.md","learning/2024-05-21-if-else",{"loc":33,"images":50},[51,53,55,57,59,61],{"loc":52},"https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/052/259/original/Screenshot_2023-10-04_at_2.25.30_PM.png?1696409763",{"loc":54},"https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/052/260/original/Screenshot_2023-10-04_at_2.27.12_PM.png?1696409843",{"loc":56},"https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/052/261/original/Screenshot_2023-10-04_at_2.31.03_PM.png?1696410084",{"loc":58},"https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/052/262/original/Screenshot_2023-10-04_at_2.32.31_PM.png?1696410182",{"loc":60},"https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/045/724/original/upload_a249488f4da0204e8671e22d85267672.png?1693733958",{"loc":62},"https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/045/725/original/upload_a7f4d3e8fb808f6475963859c4aed00c.png?1693734037",{"_path":64,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":65,"description":66,"date":67,"eventName":37,"location":8,"slidesUrl":68,"type":39,"language":15,"topics":69,"readingTime":70,"_type":25,"_id":75,"_source":27,"_file":76,"_stem":77,"_extension":30,"sitemap":78},"/learning/2024-05-20-operators-in-java","2. Operators in JAVA","Java provides many types of operators which can be used according to the need. They are classified based on the functionality they provide. In this article, we will learn about Java Operators and learn all their types.","2024-05-20","https://github.com/AherRahul/portfolio-v1/blob/main/content/learning/2024-05-20-operators-in-java.md",[17,19],{"text":71,"minutes":72,"time":73,"words":74},"23 min read",22.105,1326300,4421,"content:learning:2024-05-20-operators-in-java.md","learning/2024-05-20-operators-in-java.md","learning/2024-05-20-operators-in-java",{"loc":64,"images":79},[80],{"loc":81},"https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/050/235/original/upload_23ef2438b9c3b2043ca7f53fffb61f9d.png?1695417557",{"_path":83,"_dir":6,"_draft":7,"_partial":7,"_locale":8,"title":84,"description":85,"date":86,"eventName":37,"location":8,"slidesUrl":87,"type":39,"language":15,"topics":88,"readingTime":89,"_type":25,"_id":94,"_source":27,"_file":95,"_stem":96,"_extension":30,"sitemap":97},"/learning/2024-05-19-beginner-data-types-reading-input","1. Beginner: Data Types + Reading Input","A data type is an attribute associated with a piece of data that tells a computer system how to interpret its value. Understanding data types ensures that data is collected in the preferred format and the value of each property is as expected.","2024-05-19","https://github.com/AherRahul/portfolio-v1/blob/main/content/learning/2024-05-19-beginner-data-types-reading-input.md",[17,19],{"text":90,"minutes":91,"time":92,"words":93},"11 min read",10.115,606900,2023,"content:learning:2024-05-19-beginner-data-types-reading-input.md","learning/2024-05-19-beginner-data-types-reading-input.md","learning/2024-05-19-beginner-data-types-reading-input",{"loc":83},[99,214,311,367],{"_path":100,"_dir":101,"_draft":7,"_partial":7,"_locale":8,"title":102,"description":103,"time":104,"tutor":105,"video":7,"topics":106,"content":109,"readingTime":205,"_type":25,"_id":210,"_source":27,"_file":211,"_stem":212,"_extension":30,"sitemap":213},"/courses/01-beginner-to-advance-nodejs","courses","NodeJS Deep Dive","Node.js is a powerful JavaScript runtime that enables fast, scalable, and event-driven server-side development. This course offers an in-depth exploration of Node.js internals - covering its architecture, core concepts, and essential components such as the JavaScript engine and libuv. You'll gain a solid understanding of the Node.js ecosystem, including how its asynchronous model and event loop function under the hood. With a strong focus on hands-on learning, the course guides you through building real-world backend applications from scratch using Express.js and MongoDB.","1hr 30 mins",1,[107,108],"nodejs","javascript",[110,149],{"module_id":105,"module_name":111,"module_duration":112,"topics_count":113,"tutor":105,"expanded":7,"topics":114},"Getting Started with Node.js","25 mins read",4,[115,125,134,142],{"id":105,"topic_name":116,"sub_topic":117,"publish_date":118,"description":119,"topics":120,"duration":121,"photo_url":122,"auther_name":123,"is_on_youtube":7,"_path":124},"Introduction to NodeJS","NodeJS Basics - Module 1","2025-04-05","Node.js is a high-performance JavaScript runtime designed for building fast, scalable server-side applications. With its event-driven, non-blocking architecture, it efficiently handles multiple requests, making it ideal for real-time applications like chat apps and streaming services. By the end, youâ€™ll have a strong foundation in Node.js, enabling you to build scalable, high-performance applications from scratch.\n",[107,108],"3:00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1757930701/Portfolio/nodeJsCourse/1_dekvuz.png","Rahul Aher","beginner-to-advance-nodejs-1-1",{"id":126,"topic_name":127,"sub_topic":117,"publish_date":128,"description":129,"topics":130,"duration":131,"photo_url":132,"auther_name":123,"is_on_youtube":7,"_path":133},2,"JavaScript on Server","2025-04-06","Discover how JavaScript powers server-side development with Node.js, transforming the way web applications are built. Node.js is a fast, scalable runtime that enables asynchronous, event-driven programming, making it ideal for real-time applications like chat apps and streaming services. You'll also learn to build server-side applications from scratch, manage dependencies with npm, and use frameworks like Express.js.\n",[107,108],"5:00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1757930701/Portfolio/nodeJsCourse/2_zzsbpy.png","beginner-to-advance-nodejs-1-2",{"id":135,"topic_name":136,"sub_topic":117,"publish_date":137,"description":138,"topics":139,"duration":131,"photo_url":140,"auther_name":123,"is_on_youtube":7,"_path":141},3,"Let's write code","2025-04-07","Go to Node.js website and download the latest version, If you are struggling in installing feel free to contact me , we can schedule a 5min meeting I will help you to download Node.js in to your system , Best way to download it , Go to Prebuilt installer and download a file and install it by executing by dowload file.\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1757930702/Portfolio/nodeJsCourse/3_xveryy.png","beginner-to-advance-nodejs-1-3",{"id":113,"topic_name":143,"sub_topic":117,"publish_date":144,"description":145,"topics":146,"duration":131,"photo_url":147,"auther_name":123,"is_on_youtube":7,"_path":148},"Module.export & require","2025-04-08","As you saw in the last episode, we wrote our first line of code in Node.js. Now, we could just keep adding whatever we want to app.js, and technically, it would work. But that's not the best way to do things because the file would get cluttered and hard to manage. Instead, we need multiple files.So, you'll use require to include different modules into your main file.\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1757930702/Portfolio/nodeJsCourse/4.png","beginner-to-advance-nodejs-1-4",{"module_id":126,"module_name":150,"module_duration":151,"topics_count":152,"tutor":105,"expanded":7,"topics":153},"Node.js Internals & Core Concepts","60 mins read",6,[154,163,171,180,188,197],{"id":155,"topic_name":156,"sub_topic":117,"publish_date":157,"description":158,"topics":159,"duration":160,"photo_url":161,"auther_name":123,"is_on_youtube":7,"_path":162},5,"Diving into the NodeJS github repo","2025-04-09","As we know, each module in Node.js has its own scope. How does Node.js achieve this? In JavaScript, we follow the Principle of Least Privilege (PoLP), which is related to functions and scope. If you're unfamiliar, you can Google it. The idea is to only expose what is necessary to the global scope, keeping everything else private. To achieve PoLP, wrap your code in a function or immediately invoke it (IIFE).\n",[107,108],"8.00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1757930703/Portfolio/nodeJsCourse/5.png","beginner-to-advance-nodejs-1-5",{"id":152,"topic_name":164,"sub_topic":117,"publish_date":165,"description":166,"topics":167,"duration":168,"photo_url":169,"auther_name":123,"is_on_youtube":7,"_path":170},"libuv & async IO in Node.js","2025-04-10","If you read Node.js's definition, it mentions an event-driven architecture and its ability to handle asynchronous I/O. These two concepts are crucial to understand, so take your time to read and grasp them thoroughly. We know JavaScript is a synchronous, single-threaded language, meaning the code runs in one direction like a one-way road, with one task executing at a time.\n",[107,108],"8:00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1757930703/Portfolio/nodeJsCourse/6.png","beginner-to-advance-nodejs-1-6",{"id":172,"topic_name":173,"sub_topic":117,"publish_date":174,"description":175,"topics":176,"duration":177,"photo_url":178,"auther_name":123,"is_on_youtube":7,"_path":179},7,"sync, async, setTimeoutZero in Node.js","2025-04-11","In the last few sessions, we have seen how Node.js code runs. If something is synchronous, the V8 engine handles it, or in case of asynchronous tasks, libUV steps in. You can think of Node.js having two best friends, like Jai and Veeru. Whenever a problem (or code) comes in, they handle it accordingly.\n",[107,108],"9:00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1757930704/Portfolio/nodeJsCourse/7.png","beginner-to-advance-nodejs-1-7",{"id":181,"topic_name":182,"sub_topic":117,"publish_date":183,"description":184,"topics":185,"duration":131,"photo_url":186,"auther_name":123,"is_on_youtube":7,"_path":187},8,"Deep dive into v8 JS Engine","2025-04-12","Now, let's focus on one of Node.js's best friends, the V8 Engine. It takes the code and runs it. Before doing anything, I just want you to read this carefully.\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1757930704/Portfolio/nodeJsCourse/8.png","beginner-to-advance-nodejs-1-8",{"id":189,"topic_name":190,"sub_topic":117,"publish_date":191,"description":192,"topics":193,"duration":194,"photo_url":195,"auther_name":123,"is_on_youtube":7,"_path":196},9,"libuv & Event Loop","2025-04-13","As we know, Node.js has two main parts, like the duo Jai and Veeru: the V8 engine and libuv. Letâ€™s take a closer look at libuv. Just like the V8 engine has its hidden parts, you can learn more about it by clicking here. Now, letâ€™s focus on libuv.\n",[107,108],"15:00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1757930709/Portfolio/nodeJsCourse/9.png","beginner-to-advance-nodejs-1-9",{"id":198,"topic_name":199,"sub_topic":117,"publish_date":200,"description":201,"topics":202,"duration":194,"photo_url":203,"auther_name":123,"is_on_youtube":7,"_path":204},10,"LibUV Thread Pool - Deep Dive","2025-04-14","Welcome back! If you havenâ€™t read the previous blog about the two friends, go and check that out first because things are getting more interesting. Weâ€™ve received an official FIR against Node.js, and when Node.js faced trouble, it called in its two best friends for help.\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1757930716/Portfolio/nodeJsCourse/10.png","beginner-to-advance-nodejs-1-10",{"text":206,"minutes":207,"time":208,"words":209},"3 min read",2.785,167100,557,"content:courses:01-beginner-to-advance-nodejs.md","courses/01-beginner-to-advance-nodejs.md","courses/01-beginner-to-advance-nodejs",{"loc":100},{"_path":215,"_dir":101,"_draft":7,"_partial":7,"_locale":8,"title":216,"description":217,"tutor":105,"time":218,"video":7,"topics":219,"content":220,"readingTime":303,"_type":25,"_id":307,"_source":27,"_file":308,"_stem":309,"_extension":30,"sitemap":310},"/courses/02-frontend-system-design","Frontend System Design","This course is designed to take you from Zero to Hero in Frontend System Design. Through a combination of in-depth tutorials and practical, real-world examples, youâ€™ll gain hands-on experience in designing scalable and efficient frontend architectures. The curriculum follows a â€˜learn by doingâ€™ approach, ensuring that even the most complex topics are grounded in real application scenarios. Whether you're aiming to build robust frontend systems or preparing for your next Frontend System Design interview, this course equips you with the skills and confidence to succeed. Start your journey today.","5hr 30 mins",[107,108],[221,264],{"module_id":105,"module_name":222,"module_duration":223,"topics_count":155,"tutor":105,"expanded":7,"topics":224},"Networking","40 mins read",[225,233,240,248,256],{"id":105,"topic_name":226,"sub_topic":222,"publish_date":227,"description":228,"topics":229,"duration":230,"photo_url":231,"auther_name":123,"is_on_youtube":7,"_path":232},"How the Web Works","2025-03-01","Network is a core part of software, as the frontend needs data and the backend sends it. All of this happens through the network. How is data transferred over the internet? How does it reach the client, and what protocols are required? These are essential concepts for software development. We need to understand what happens when we type \"google.com,\" what DNS is, and its role in the process.\n",[107,108],"14:00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1744045763/Portfolio/FrontendSystemDesignCourse/1_lxnuab.png","frontend-system-design-1-1",{"id":126,"topic_name":234,"sub_topic":222,"publish_date":235,"description":236,"topics":237,"duration":121,"photo_url":238,"auther_name":123,"is_on_youtube":7,"_path":239},"Communication Protocols","2025-03-02","A communications protocol is a set of formal rules describing how to transmit or exchange data, especially across a network. A standardised communications protocol is one that has been codified as a standard. Examples of these include WiFi, the Internet Protocol, and the Hypertext Transfer Protocol (HTTP).\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1744045766/Portfolio/FrontendSystemDesignCourse/2_qlrcpc.png","frontend-system-design-1-2",{"id":135,"topic_name":241,"sub_topic":222,"publish_date":242,"description":243,"topics":244,"duration":245,"photo_url":246,"auther_name":123,"is_on_youtube":7,"_path":247},"HTTP Headers Methods Status Codes and Rest API Deep Dive","2025-03-03","If you are a junior developer, a senior developer, or just a complete newbie, this is going to be a great place to learn about REST APIsâ€”what they are, why they are used, and how they work. This is going to be a long blog, so itâ€™s for serious readers. If you prefer short TikTok-like videos for instant information, this might not be for you. Letâ€™s get started!\n",[107,108],"22:00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1744045770/Portfolio/FrontendSystemDesignCourse/3_sskfuy.png","frontend-system-design-1-3",{"id":113,"topic_name":249,"sub_topic":222,"publish_date":250,"description":251,"topics":252,"duration":253,"photo_url":254,"auther_name":123,"is_on_youtube":7,"_path":255},"Why GraphQL over Rest APIs","2025-03-04","Many companies today use GraphQL. In this blog, weâ€™ll explore what GraphQL is, its benefits, and why itâ€™s so popular. Suppose your app needs information about continents, countries, and languages. If youâ€™re using REST APIs, youâ€™ll likely call multiple APIs to fetch this data and then organize it for your frontend. Be patientâ€”itâ€™s not an Instagram Reel, but for serious learners, itâ€™ll be worth the read.\n",[107,108],"11:00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1744045780/Portfolio/FrontendSystemDesignCourse/4_iildzs.png","frontend-system-design-1-4",{"id":155,"topic_name":257,"sub_topic":222,"publish_date":258,"description":259,"topics":260,"duration":261,"photo_url":262,"auther_name":123,"is_on_youtube":7,"_path":263},"A quick overview of gRPC","2025-03-05","It's kind of like a sibling to REST API or GraphQL, enabling communication with the server in a unique way. RPC stands for Remote Procedure Call, and the \"g\" in gRPC stands for Google, as it was created by Google.\n",[107,108],"6.00 mins read","https://res.cloudinary.com/duojkrgue/image/upload/v1744045783/Portfolio/FrontendSystemDesignCourse/5_uc5xlf.png","frontend-system-design-1-5",{"module_id":126,"module_name":265,"module_duration":266,"topics_count":155,"tutor":105,"expanded":7,"topics":267},"Communication","35 mins read",[268,275,282,289,296],{"id":152,"topic_name":269,"sub_topic":222,"publish_date":270,"description":271,"topics":272,"duration":230,"photo_url":273,"auther_name":123,"is_on_youtube":7,"_path":274},"What is short polling? Learn with example","2025-03-06","Dive into short polling methodologies. Explore the technique of frequent requests to servers at fixed intervals, enabling frontend applications to obtain recent data updates for dynamic content.\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1744108647/Portfolio/FrontendSystemDesignCourse/6_llcndo.png","frontend-system-design-2-1",{"id":172,"topic_name":276,"sub_topic":222,"publish_date":277,"description":278,"topics":279,"duration":121,"photo_url":280,"auther_name":123,"is_on_youtube":7,"_path":281},"Practical Guide Long Polling","2025-03-07","Explore long polling techniques. Learn how continuous connections to servers facilitate real-time data updates, enabling frontend applications to receive immediate data upon availability, optimizing user experiences.\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1744108670/Portfolio/FrontendSystemDesignCourse/7_y3axa8.png","frontend-system-design-2-2",{"id":181,"topic_name":283,"sub_topic":222,"publish_date":284,"description":285,"topics":286,"duration":245,"photo_url":287,"auther_name":123,"is_on_youtube":7,"_path":288},"Web Socket","2025-03-08","Discover the power of Web Sockets. Learn to establish persistent connections facilitating real-time, bidirectional communication between clients and servers, enhancing interactivity and responsiveness in frontend applications.\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1744108685/Portfolio/FrontendSystemDesignCourse/8_botlhe.png","frontend-system-design-2-3",{"id":189,"topic_name":290,"sub_topic":222,"publish_date":291,"description":292,"topics":293,"duration":253,"photo_url":294,"auther_name":123,"is_on_youtube":7,"_path":295},"Server Sent Events - A Real time communication","2025-03-09","Delve into Server-Sent Events. Understand how servers push data to clients, enabling continuous updates in frontend applications without the need for repeated requests, optimizing data streaming.\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1744108696/Portfolio/FrontendSystemDesignCourse/9_fvmoja.png","frontend-system-design-2-4",{"id":198,"topic_name":297,"sub_topic":222,"publish_date":298,"description":299,"topics":300,"duration":261,"photo_url":301,"auther_name":123,"is_on_youtube":7,"_path":302},"Introduction to Web hooks","2025-03-10","Understand WebHooks' functionalities. Learn how they trigger instant notifications and events, allowing frontend systems to react promptly to external changes or specific actions, ensuring responsiveness and agility.\n",[107,108],"https://res.cloudinary.com/duojkrgue/image/upload/v1744108709/Portfolio/FrontendSystemDesignCourse/10_ahspdw.png","frontend-system-design-2-5",{"text":206,"minutes":304,"time":305,"words":306},2.745,164700,549,"content:courses:02-frontend-system-design.md","courses/02-frontend-system-design.md","courses/02-frontend-system-design",{"loc":215},{"_path":312,"_dir":101,"_draft":7,"_partial":7,"_locale":8,"title":313,"description":314,"tutor":105,"video":315,"topics":316,"time":319,"content":320,"readingTime":358,"_type":25,"_id":363,"_source":27,"_file":364,"_stem":365,"_extension":30,"sitemap":366},"/courses/aws-solution-architect","AWS Certified Solutions Architect","The AWS Certified Solutions Architect certification is one of the most prestigious and in-demand credentials in cloud computing. This course is thoughtfully designed for anyone looking to master the core components of Amazon Web Services (AWS) and build a strong foundation in cloud architecture. Through comprehensive lessons and hands-on practice, you'll gain the skills needed to design scalable, secure, and cost-efficient cloud solutions. By the end of this training, you'll be fully prepared to pass the associate-level AWS Certified Solutions Architect exam with confidence.",true,[317,318],"aws","solution-architect","6:54 mins",[321,333],{"module_id":105,"module_name":322,"module_duration":323,"topics_count":126,"expanded":7,"tutor":105,"topics":324},"Introduction","10 mins",[325],{"id":105,"topic_name":326,"sub_topic":327,"publish_date":328,"description":329,"topics":330,"duration":319,"videoUrl":331,"auther_name":123,"is_on_youtube":315,"_path":332},"Exam Guide","Associate SAA C03 Exam Guide","2024-09-28","AWS Certified Solutions Architect is one of the most popular cloud computing certifications. In this full course taught by an expert trainer, you will learn the major parts of Amazon Web Services, and prepare for the associate-level AWS Certified Solutions Architect exam. By the end of this course, you will be ready to take the AWS Certified Solutions Architect Associate exam - and pass!\n",[317,318],"https://www.youtube.com/embed/ejZm0c_OhYM?si=_EDroaJF7rPD1dvL","aws-solution-architect-1-1",{"module_id":126,"module_name":334,"module_duration":335,"topics_count":135,"tutor":105,"topics":336},"AWS Fundamentals","44 mins",[337,345,352],{"id":105,"topic_name":338,"publish_date":339,"description":340,"topics":341,"duration":342,"videoUrl":343,"auther_name":123,"is_on_youtube":315,"_path":344},"The Building Blocks of AWS - Availability Zones and Regions","2024-10-15","Learn about AWS Regions and Availability Zones (AZs), the foundation of AWS's global infrastructure. Regions are geographically isolated locations, each containing multiple AZs. These AZs are designed for high availability, fault tolerance, and low latency, enabling applications to stay resilient and perform efficiently across the globe.\n",[317,318],"8:27 mins","https://www.youtube.com/embed/SVW2HBZ3QNA?si=TsD1JykWf5LYzBil","aws-solution-architect-2-1",{"id":126,"topic_name":346,"publish_date":339,"description":347,"topics":348,"duration":349,"videoUrl":350,"auther_name":123,"is_on_youtube":315,"_path":351},"Who Owns What in the Cloud?","It explores the shared responsibility model of cloud computing. In this model, AWS manages the infrastructure's security, such as physical hardware, networking, and global infrastructure, while customers are responsible for securing their applications, data, and access configurations. Understanding this division is crucial for designing secure and compliant cloud architectures.\n",[317,318],"5:44 mins","https://www.youtube.com/embed/izQlU1sZkNg?si=q_GceoOp1N6nWdNZ","aws-solution-architect-2-2",{"id":135,"topic_name":353,"publish_date":339,"description":354,"topics":355,"duration":342,"videoUrl":356,"auther_name":123,"is_on_youtube":315,"_path":357},"Compute, Storage, Databases, and Networking","It covers the core AWS services that power cloud applications. Compute services like EC2 and Lambda handle processing, while storage solutions like S3 and EBS manage data. Databases such as RDS and DynamoDB ensure efficient data management, and networking tools like VPC and CloudFront enable secure and scalable connectivity. These services form the foundation of any AWS architecture.\n",[317,318],"https://www.youtube.com/embed/ULfTWvsHw20?si=O7d0O9g4OH5sZHRS","aws-solution-architect-2-3",{"text":359,"minutes":360,"time":361,"words":362},"4 min read",3.31,198600,662,"content:courses:aws-solution-architect.md","courses/aws-solution-architect.md","courses/aws-solution-architect",{"loc":312},{"_path":368,"_dir":101,"_draft":7,"_partial":7,"_locale":8,"title":369,"description":370,"time":371,"tutor":105,"video":315,"topics":372,"content":374,"readingTime":422,"_type":25,"_id":423,"_source":27,"_file":424,"_stem":425,"_extension":30,"sitemap":426},"/courses/beginner-system-design","System Design","System Design is the art of architecting robust, scalable, and efficient systems by defining their structure, components, modules, interfaces, and data flow. It transforms user requirements into a detailed technical blueprint that drives the development process. The ultimate goal is to build systems that not only fulfill functional needs but also excel in scalability, maintainability, and performanceâ€”ensuring long-term reliability and adaptability in real-world environments.","8:43 mins",[373],"system-design",[375,402],{"module_id":105,"module_name":322,"module_duration":376,"topics_count":135,"tutor":105,"expanded":7,"topics":377},"40 mins",[378,386,394],{"id":105,"topic_name":379,"sub_topic":380,"publish_date":381,"description":382,"topics":383,"duration":371,"videoUrl":384,"auther_name":123,"is_on_youtube":315,"_path":385},"What is System Design?","System Design Basics","2024-11-05","Systems Design involves creating a detailed blueprint for a systemâ€™s architecture, components, modules, interfaces, and data to meet specific requirements. It translates user needs into an organized structure, guiding implementation. The goal is to ensure scalability, maintainability, and performance while building an efficient system.\n",[373],"https://www.youtube.com/embed/K9EFon58_UI?si=95in2rvIl1h6pDxU","beginner-system-design-1-1",{"id":126,"topic_name":387,"sub_topic":380,"publish_date":388,"description":389,"topics":390,"duration":391,"videoUrl":392,"auther_name":123,"is_on_youtube":315,"_path":393},"How to approach system design?","2024-11-27","Learn a structured approach to system design. Start by understanding functional and non-functional requirements, then break the system into components like databases, frontend, backend, and caching. Select tools for scalability, reliability, and performance. Visualize the architecture with diagrams and iterate to optimize and resolve bottlenecks effectively.\n",[373],"16:23 mins","https://www.youtube.com/embed/JqcpMz3TykA?si=-rjiVhzMKwsMC9gr","beginner-system-design-1-2",{"id":135,"topic_name":395,"sub_topic":380,"publish_date":396,"description":397,"topics":398,"duration":399,"videoUrl":400,"auther_name":123,"is_on_youtube":315,"_path":401},"How do you evaluate that you have built a good system?","2024-11-29","In this video, we explore the key metrics, strategies, and frameworks to evaluate whether your system is well-designed, efficient, and scalable. Learn how to assess user satisfaction, performance, maintainability, and more!. Learn how to assess user satisfaction, performance, maintainability, and more!\n",[373],"8:10 mins","https://www.youtube.com/embed/F5mNbnsT12E?si=hF5yLA4XZ5XFV-vk","beginner-system-design-1-3",{"module_id":126,"module_name":403,"module_duration":404,"topics_count":126,"tutor":105,"expanded":7,"topics":405},"Databases designing","25 mins",[406,414],{"id":113,"topic_name":407,"sub_topic":380,"publish_date":408,"description":409,"topics":410,"duration":411,"videoUrl":412,"auther_name":123,"is_on_youtube":315,"_path":413},"Relational Databases for System Design","2024-11-30","Learn everything you need to know relational databases in system design? This video explains how relational databases work, their importance, and best practices for integrating them into scalable systems. Explore key metrics, strategies, and frameworks to evaluate if your system is efficient, scalable, and well-designed. \n",[373],"19:39 mins","https://www.youtube.com/embed/g7C8ahBzoRA?si=n4wPLZky6xVqUl4u","beginner-system-design-2-1",{"id":155,"topic_name":415,"sub_topic":380,"publish_date":416,"description":417,"topics":418,"duration":419,"videoUrl":420,"auther_name":123,"is_on_youtube":315,"_path":421},"Database Transaction Isolation Levels Explained","2024-12-01","Learn everything you need to know about database transaction isolation levels! Understand how they prevent issues like dirty reads, phantom reads, and write conflicts, and when to use each level. Confused by terms like Read Uncommitted, Repeatable Read, or Serializable? This video has clear examples to help you manage concurrency and maintain data integrity.\n",[373],"18.17 mins","https://www.youtube.com/embed/edejC34kkBk?si=xRzr-kS7oN9LQpMY","beginner-system-design-2-2",{"text":206,"minutes":304,"time":305,"words":306},"content:courses:beginner-system-design.md","courses/beginner-system-design.md","courses/beginner-system-design",{"loc":368},[428,446,461],{"_path":429,"_dir":430,"_draft":7,"_partial":7,"_locale":8,"title":431,"description":432,"projectGitHubLink":433,"projectDemoLink":434,"topics":435,"readingTime":437,"_type":25,"_id":442,"_source":27,"_file":443,"_stem":444,"_extension":30,"sitemap":445},"/projects/chat-app-fullstack","projects","Chat Application with NodeJS, Angular, and Ionic","This Full-Stack Real-Time Chat Application demonstrates how to build a fully functional web and mobile chat app using modern technologies like NodeJS, Angular, Ionic, and MongoDB. The app allows users to engage in live conversations with real-time messaging, upload images, and interact with others via a seamless, interactive interface across both web and mobile platforms.","https://github.com/AherRahul/Angular-Ionic-NodeJs-ChatApp","https://rds-chat-app.netlify.app/",[436],"html",{"text":438,"minutes":439,"time":440,"words":441},"6 min read",5.095,305700,1019,"content:projects:chat-app-fullstack.md","projects/chat-app-fullstack.md","projects/chat-app-fullstack",{"loc":429},{"_path":447,"_dir":430,"_draft":7,"_partial":7,"_locale":8,"title":448,"description":449,"projectGitHubLink":450,"projectDemoLink":8,"topics":451,"readingTime":452,"_type":25,"_id":457,"_source":27,"_file":458,"_stem":459,"_extension":30,"sitemap":460},"/projects/dating-app-fullstack"," Dating Application with .NET Core and Angular","In this project, I built a dating application using ASP.NET Core for the backend and Angular for the frontend, creating a full-stack solution that enables users to interact and connect in real-time. The app offers various essential features for a dating platform, such as user authentication, profile management, private messaging, and real-time notifications.","https://github.com/AherRahul/DatingApp",[436],{"text":453,"minutes":454,"time":455,"words":456},"7 min read",6.545,392700,1309,"content:projects:dating-app-fullstack.md","projects/dating-app-fullstack.md","projects/dating-app-fullstack",{"loc":447},{"_path":462,"_dir":430,"_draft":7,"_partial":7,"_locale":8,"title":463,"description":464,"time":465,"projectGitHubLink":466,"projectDemoLink":467,"nodePackageLink":468,"topics":469,"readingTime":472,"_type":25,"_id":477,"_source":27,"_file":478,"_stem":479,"_extension":30,"sitemap":480},"/projects/rds-design-system","RDS (Design system): NPM Package for Vue Projects ","Consistency and standards are important for building a unified design language and help the user know what to expect from our product and how to use it. However, this does not mean sacrificing the user experience. In this sense, the context and needs of our users are priorities when developing our solutions.","1 hr/day","https://github.com/AherRahul/design-system","https://rds-design-system.netlify.app/","https://www.npmjs.com/package/@aherrahul/design-system",[470,430,471],"vue","component-library",{"text":473,"minutes":474,"time":475,"words":476},"5 min read",4.43,265800,886,"content:projects:rds-design-system.md","projects/rds-design-system.md","projects/rds-design-system",{"loc":462},[482,499,521,537],{"_path":483,"_dir":484,"_draft":7,"_partial":7,"_locale":8,"title":485,"description":486,"slidesUrl":487,"dateModified":488,"datePublished":488,"showOnArticles":315,"topics":489,"readingTime":491,"_type":25,"_id":495,"_source":27,"_file":496,"_stem":497,"_extension":30,"sitemap":498},"/articles/api-architecture","articles","API Architecture - Design Best Practices for REST APIs","REST which stands for Representational State Transfer is an architectural style that governs how APIs are designed and built. RESTâ€™s popularity and ease of implementation make it the most preferred API architectural style for modern-day software development as compared to other protocols such as SOAP (simple object access protocol). REST APIs or RESTful web services have become the backbone for efficient communication between client and server in modern-day software development. However, to build efficient and robust REST APIs, it is crucial to follow some standard best practices. In this blog, weâ€™ll explore REST API best practices that can help you build scalable, maintainable, secure, and robust APIs.","https://github.com/AherRahul/portfolio-v1/blob/main/content/articles/api-architecture.md","2024-05-26",[373,317,490],"lld",{"text":359,"minutes":492,"time":493,"words":494},3.375,202500,675,"content:articles:api-architecture.md","articles/api-architecture.md","articles/api-architecture",{"loc":483},{"_path":500,"_dir":484,"_draft":7,"_partial":7,"_locale":8,"title":501,"description":502,"slidesUrl":503,"dateModified":504,"datePublished":504,"showOnArticles":315,"topics":505,"readingTime":506,"_type":25,"_id":510,"_source":27,"_file":511,"_stem":512,"_extension":30,"sitemap":513},"/articles/eventual-vs-strong-consistency-in-distributed-databases","Eventual vs Strong Consistency in Distributed Databases","While consistency is vital, itâ€™s essential to understand that achieving strong consistency in distributed systems can come at the expense of increased latency and reduced availability. Strong consistency may require additional coordination mechanisms that slow down operations. Therefore, choosing the appropriate consistency model involves striking a balance between data correctness and system performance, based on the specific requirements of the application and use case. Different systems may opt for eventual consistency or other weaker consistency models if absolute real-time consistency is not necessary for their functionality.","https://github.com/AherRahul/portfolio-v1/blob/main/content/articles/eventual-vs-strong-consistency-in-distributed-databases.md","2024-05-25",[373,317,490],{"text":359,"minutes":507,"time":508,"words":509},3.785,227100,757,"content:articles:eventual-vs-strong-consistency-in-distributed-databases.md","articles/eventual-vs-strong-consistency-in-distributed-databases.md","articles/eventual-vs-strong-consistency-in-distributed-databases",{"loc":500,"images":514},[515,517,519],{"loc":516},"https://hackernoon.imgix.net/hn-images/1*PiQhvAicV4TUXohXNdNMuA.png?w=640&q=75&auto=format%201x,%20https://hackernoon.imgix.net/hn-images/1*PiQhvAicV4TUXohXNdNMuA.png?w=1200&q=75&auto=format%202x",{"loc":518},"https://hackernoon.imgix.net/hn-images/1*PFgHx8UYLhk3L5ePPmailQ.png?w=1200&q=75&auto=format",{"loc":520},"https://hackernoon.imgix.net/hn-images/1*klFtrGr8U-XmyiZ1CJx-0w.png?w=1200&q=75&auto=format",{"_path":522,"_dir":484,"_draft":7,"_partial":7,"_locale":8,"title":523,"description":524,"slidesUrl":525,"dateModified":526,"datePublished":526,"showOnArticles":315,"topics":527,"readingTime":528,"_type":25,"_id":533,"_source":27,"_file":534,"_stem":535,"_extension":30,"sitemap":536},"/articles/rate-limiting","Rate Limiting","Rate limiting runs within an application, rather than running on the web server itself. Typically, rate limiting is based on tracking the IP addresses that requests are coming from, and tracking how much time elapses between each request. The IP address is the main way an application identifies who or what is making the request. A rate limiting solution measures the amount of time between each request from each IP address, and also measures the number of requests within a specified timeframe. If there are too many requests from a single IP within the given timeframe, the rate limiting solution will not fulfill the IP address's requests for a certain amount of time.","https://github.com/AherRahul/portfolio-v1/blob/main/content/articles/rate-limiting.md","2024-05-24",[373,317,490],{"text":529,"minutes":530,"time":531,"words":532},"8 min read",7.625,457500,1525,"content:articles:rate-limiting.md","articles/rate-limiting.md","articles/rate-limiting",{"loc":522},{"_path":538,"_dir":484,"_draft":7,"_partial":7,"_locale":8,"title":539,"description":540,"slidesUrl":541,"dateModified":542,"datePublished":542,"showOnArticles":315,"topics":543,"readingTime":544,"_type":25,"_id":549,"_source":27,"_file":550,"_stem":551,"_extension":30,"sitemap":552},"/articles/consistent-hashing-algorithm","Consistent Hashing Algorithm","Consistent hashing is a distributed hashing technique used in computer science and distributed systems to achieve load balancing and minimize the need for rehashing when the number of nodes in a system changes. It is particularly useful in distributed hash tables (DHTs), distributed caching systems, and other distributed storage systems. Consistent hashing is a technique used in computer systems to distribute keys (e.g., cache keys) uniformly across a cluster of nodes (e.g., cache servers). The goal is to minimize the number of keys that need to be moved when nodes are added or removed from the cluster, thus reducing the impact of these changes on the overall system.","https://github.com/AherRahul/portfolio-v1/blob/main/content/articles/consistent-hashing-algorithm.md","2024-05-23",[373,317,490],{"text":545,"minutes":546,"time":547,"words":548},"17 min read",16.655,999300,3331,"content:articles:consistent-hashing-algorithm.md","articles/consistent-hashing-algorithm.md","articles/consistent-hashing-algorithm",{"loc":538,"images":553},[554,556,558,560,562,564,566,568,570,572,574,576,578,580,582,584,586,588,590,592,594,596,598,600,602,604,606,608,610,612],{"loc":555},"https://highscalability.com/content/images/2024/02/yle8ukj.png",{"loc":557},"https://systemdesign.one/consistent-hashing-explained/dynamic-hashing.webp",{"loc":559},"https://highscalability.com/content/images/2024/02/lch5ja1-__squarespace_cacheversion-1675880048742.png",{"loc":561},"https://systemdesign.one/consistent-hashing-explained/single-global-cache.webp",{"loc":563},"https://systemdesign.one/consistent-hashing-explained/key-range-partitioning.webp",{"loc":565},"https://systemdesign.one/consistent-hashing-explained/static-hash-partitioning.webp",{"loc":567},"https://systemdesign.one/consistent-hashing-explained/static-hash-partitioning-node-failure.webp",{"loc":569},"https://systemdesign.one/consistent-hashing-explained/static-hash-partitioning-node-added.webp",{"loc":571},"https://systemdesign.one/consistent-hashing-explained/Static-hash-partitioning-data-movement.webp",{"loc":573},"https://systemdesign.one/consistent-hashing-explained/consistent-hashing.webp",{"loc":575},"https://systemdesign.one/consistent-hashing-explained/Hash-function-mapping.webp",{"loc":577},"https://systemdesign.one/consistent-hashing-explained/Consistent-hash-ring.webp",{"loc":579},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-Positioning-the-nodes-on-the-hash-ring.webp",{"loc":581},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-Node-position.webp",{"loc":583},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-Storing-data-object.webp",{"loc":585},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-Retrieving-data-object.webp",{"loc":587},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-Deletion-of-node.webp",{"loc":589},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-Addition-of-node.webp",{"loc":591},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-Non-uniform-positioning-nodes.webp",{"loc":593},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-Virtual-nodes.webp",{"loc":595},"https://systemdesign.one/consistent-hashing-explained/Binary-search-tree-storing-node-positions.webp",{"loc":597},"https://systemdesign.one/consistent-hashing-explained/Insertion-of-data-object.webp",{"loc":599},"https://systemdesign.one/consistent-hashing-explained/Insertion-of-node.webp",{"loc":601},"https://systemdesign.one/consistent-hashing-explained/Deletion-of-node.webp",{"loc":603},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-example-Discord.webp",{"loc":605},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-example-Amazon-Dynamo.webp",{"loc":607},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-example-Vimeo.webp",{"loc":609},"https://systemdesign.one/consistent-hashing-explained/Consistent-hashing-example-Netflix.webp",{"loc":611},"https://systemdesign.one/consistent-hashing-explained/Multi-probe-consistent-hashing.webp",{"loc":613},"https://systemdesign.one/consistent-hashing-explained/Bounded-load-consistent-hashing.webp",1758006215235]